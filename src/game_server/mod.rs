use std::collections::BTreeMap;
use std::io::{Cursor, Error};
use std::path::Path;
use std::vec;

use byteorder::{LittleEndian, ReadBytesExt};
use guid::GuidTableHandle;
use lock_enforcer::{
    CharacterLockRequest, LockEnforcer, LockEnforcerSource, ZoneLockRequest, ZoneTableReadHandle,
};
use player_update_packet::{Attachment, UpdateEquippedItems};
use portrait::ImageData;
use rand::Rng;

use packet_serialize::{
    DeserializePacket, DeserializePacketError, NullTerminatedString, SerializePacketError,
};
use ui::ExecuteScriptWithParams;
use unique_guid::{shorten_zone_template_guid, zone_instance_guid};
use zone::CharacterIndex;

use crate::game_server::chat::process_chat_packet;
use crate::game_server::client_update_packet::{
    Health, Power, PreloadCharactersDone, Stat, StatId, Stats,
};
use crate::game_server::command::process_command;
use crate::game_server::game_packet::{GamePacket, OpCode};
use crate::game_server::guid::{GuidTable, GuidTableWriteHandle};
use crate::game_server::housing::{
    process_housing_packet, HouseDescription, HouseInstanceEntry, HouseInstanceList,
};
use crate::game_server::item::make_item_definitions;
use crate::game_server::login::{
    send_points_of_interest, DeploymentEnv, GameSettings, LoginReply, WelcomeScreen,
    ZoneDetailsDone,
};
use crate::game_server::mount::{load_mounts, process_mount_packet, MountConfig};
use crate::game_server::player_data::{
    make_test_nameplate_image, make_test_player, make_test_wield_type,
};
use crate::game_server::player_update_packet::make_test_npc;
use crate::game_server::reference_data::{
    CategoryDefinition, CategoryDefinitions, CategoryRelation, ItemGroupDefinitions,
    ItemGroupDefinitionsData,
};
use crate::game_server::time::make_game_time_sync;
use crate::game_server::tunnel::{TunneledPacket, TunneledWorldPacket};
use crate::game_server::unique_guid::player_guid;
use crate::game_server::update_position::UpdatePlayerPosition;
use crate::game_server::zone::{
    load_zones, teleport_within_zone, Character, Zone, ZoneTeleportRequest, ZoneTemplate,
};
use crate::teleport_to_zone;

mod chat;
mod client_update_packet;
mod combat_update_packet;
mod command;
mod game_packet;
mod guid;
mod housing;
mod item;
mod lock_enforcer;
mod login;
mod mount;
mod player_data;
mod player_update_packet;
mod portrait;
mod purchase;
mod reference_data;
mod store;
mod time;
mod tunnel;
mod ui;
mod unique_guid;
mod update_position;
mod zone;

#[derive(Debug)]
pub enum Broadcast {
    Single(u32, Vec<Vec<u8>>),
    Multi(Vec<u32>, Vec<Vec<u8>>),
}

#[non_exhaustive]
#[derive(Debug)]
pub enum ProcessPacketError {
    CorruptedPacket,
    SerializeError(SerializePacketError),
}

impl From<Error> for ProcessPacketError {
    fn from(_: Error) -> Self {
        ProcessPacketError::CorruptedPacket
    }
}

impl From<DeserializePacketError> for ProcessPacketError {
    fn from(_: DeserializePacketError) -> Self {
        ProcessPacketError::CorruptedPacket
    }
}

impl From<SerializePacketError> for ProcessPacketError {
    fn from(value: SerializePacketError) -> Self {
        ProcessPacketError::SerializeError(value)
    }
}

pub struct GameServer {
    lock_enforcer_source: LockEnforcerSource,
    mounts: BTreeMap<u32, MountConfig>,
    zone_templates: BTreeMap<u8, ZoneTemplate>,
}

impl GameServer {
    pub fn new(config_dir: &Path) -> Result<Self, Error> {
        let characters = GuidTable::new();
        let (templates, zones) = load_zones(config_dir, characters.write())?;
        Ok(GameServer {
            lock_enforcer_source: LockEnforcerSource::from(characters, zones),
            mounts: load_mounts(config_dir)?,
            zone_templates: templates,
        })
    }

    pub fn login(&self, data: Vec<u8>) -> Result<(u32, Vec<Broadcast>), ProcessPacketError> {
        let mut cursor = Cursor::new(&data[..]);
        let raw_op_code = cursor.read_u16::<LittleEndian>()?;

        match OpCode::try_from(raw_op_code) {
            Ok(op_code) => match op_code {
                OpCode::LoginRequest => {
                    self.lock_enforcer().write_characters(
                        |characters_write_handle, zone_lock_enforcer| {
                            // TODO: validate and get GUID from login request
                            let guid = 1;

                            // TODO: get player's zone
                            let player_zone = 24;

                            let mut packets = Vec::new();

                            let login_reply = TunneledPacket {
                                unknown1: true,
                                inner: LoginReply { logged_in: true },
                            };
                            packets.push(GamePacket::serialize(&login_reply)?);

                            let deployment_env = TunneledPacket {
                                unknown1: true,
                                inner: DeploymentEnv {
                                    environment: NullTerminatedString("prod".to_string()),
                                },
                            };
                            packets.push(GamePacket::serialize(&deployment_env)?);

                            packets.append(&mut zone_lock_enforcer.read_zones(|_| {
                                ZoneLockRequest {
                                    read_guids: vec![player_zone],
                                    write_guids: Vec::new(),
                                    zone_consumer: |_, zones_read, _| {
                                        zones_read.get(&player_zone).unwrap().send_self()
                                    },
                                }
                            })?);

                            let settings = TunneledPacket {
                                unknown1: true,
                                inner: GameSettings {
                                    unknown1: 4,
                                    unknown2: 7,
                                    unknown3: 268,
                                    unknown4: true,
                                    time_scale: 1.0,
                                },
                            };
                            packets.push(GamePacket::serialize(&settings)?);

                            let item_defs = TunneledPacket {
                                unknown1: true,
                                inner: make_item_definitions(),
                            };
                            packets.push(GamePacket::serialize(&item_defs)?);

                            let player = TunneledPacket {
                                unknown1: true,
                                inner: make_test_player(guid, self.mounts()),
                            };
                            packets.push(GamePacket::serialize(&player)?);

                            characters_write_handle
                                .insert(player.inner.data.into_character(player_zone));

                            Ok((guid, vec![Broadcast::Single(guid, packets)]))
                        },
                    )
                }
                _ => {
                    println!("Client tried to log in without a login request");
                    Err(ProcessPacketError::CorruptedPacket)
                }
            },
            Err(_) => {
                println!("Unknown op code at login: {}", raw_op_code);
                Err(ProcessPacketError::CorruptedPacket)
            }
        }
    }

    pub fn process_packet(
        &self,
        sender: u32,
        data: Vec<u8>,
    ) -> Result<Vec<Broadcast>, ProcessPacketError> {
        let mut broadcasts = Vec::new();
        let mut cursor = Cursor::new(&data[..]);
        let raw_op_code = cursor.read_u16::<LittleEndian>()?;

        match OpCode::try_from(raw_op_code) {
            Ok(op_code) => match op_code {
                OpCode::TunneledClient => {
                    let packet: TunneledPacket<Vec<u8>> =
                        DeserializePacket::deserialize(&mut cursor)?;
                    broadcasts.append(&mut self.process_packet(sender, packet.inner)?);
                }
                OpCode::TunneledWorld => {
                    let packet: TunneledWorldPacket<Vec<u8>> =
                        DeserializePacket::deserialize(&mut cursor)?;
                    broadcasts.append(&mut self.process_packet(sender, packet.inner)?);
                }
                OpCode::ClientIsReady => {
                    let mut packets = Vec::new();

                    packets.append(&mut send_points_of_interest(self)?);

                    let categories = TunneledPacket {
                        unknown1: true,
                        inner: CategoryDefinitions {
                            definitions: vec![
                                CategoryDefinition {
                                    guid: -2,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 2,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 10,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 11,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 12,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 13,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 14,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 15,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 16,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 17,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 18,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 19,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 23,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 24,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 25,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 35,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 36,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 60,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 61,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 62,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 63,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 64,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 65,
                                    name: 1222,
                                    icon_set_id: 0,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 66,
                                    name: 316,
                                    icon_set_id: 786,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 67,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 68,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 69,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 70,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 84,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 85,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                                CategoryDefinition {
                                    guid: 200,
                                    name: 317,
                                    icon_set_id: 787,
                                    unknown1: 1,
                                    unknown2: true,
                                },
                            ],
                            relations: vec![
                                CategoryRelation {
                                    parent_guid: 65,
                                    child_guid: 66,
                                },
                                CategoryRelation {
                                    parent_guid: 65,
                                    child_guid: 67,
                                },
                                CategoryRelation {
                                    parent_guid: 70,
                                    child_guid: 60,
                                },
                            ],
                        },
                    };
                    packets.push(GamePacket::serialize(&categories)?);

                    let item_groups = TunneledPacket {
                        unknown1: true,
                        inner: ItemGroupDefinitions {
                            data: ItemGroupDefinitionsData {
                                definitions: vec![],
                            },
                        },
                    };
                    packets.push(GamePacket::serialize(&item_groups)?);

                    let npc = TunneledPacket {
                        unknown1: true,
                        inner: make_test_npc(),
                    };
                    //packets.push(GamePacket::serialize(&npc)?);

                    /*packets.push(GamePacket::serialize(&TunneledPacket {
                        unknown1: true,
                        inner: UpdateEquippedItems {
                            guid: player_guid(sender),
                            attachments: vec![
                                Attachment {
                                    model_name: "Wear_Human_<gender>_Body_PulsingCrystalSuit.adr".to_string(),
                                    texture_alias: "PulsingCrystalBlue".to_string(),
                                    tint_alias: "".to_string(),
                                    tint_id: 0,
                                    composite_effect: 0,
                                    slot: item::EquipmentSlot::Body
                                }
                            ],
                            unknown: 1,
                        },
                    })?);*/

                    packets.push(GamePacket::serialize(&TunneledPacket {
                        unknown1: false,
                        inner: ExecuteScriptWithParams {
                            script_name: "Console.show".to_string(),
                            params: vec![],
                        },
                    })?);

                    packets.push(GamePacket::serialize(&TunneledPacket {
                        unknown1: false,
                        inner: ExecuteScriptWithParams {
                            script_name: "ItemsHandler.SetDatasourcesConnected".to_string(),
                            params: vec!["true".to_string()],
                        },
                    })?);

                    packets.push(GamePacket::serialize(&TunneledPacket {
                        unknown1: false,
                        inner: ExecuteScriptWithParams {
                            script_name: "ItemsHandler.createDynamicDataSources".to_string(),
                            params: vec![],
                        },
                    })?);

                    packets.push(GamePacket::serialize(&TunneledPacket {
                        unknown1: false,
                        inner: ExecuteScriptWithParams {
                            script_name: "ItemsHandler.InitCustomizations".to_string(),
                            params: vec![],
                        },
                    })?);

                    packets.push(GamePacket::serialize(&TunneledPacket {
                        unknown1: true,
                        inner: ImageData {
                            guid: player_guid(sender),
                            image_name: "Headshot".to_string(),
                            unknown2: false,
                            unknown3: 0,
                            unknown4: 0,
                            unknown5: player_guid(sender),
                            unknown6: 0,
                            attachments: vec![Attachment {
                                model_name: "Wear_Human_<gender>_Body_PulsingCrystalSuit.adr"
                                    .to_string(),
                                texture_alias: "PulsingCrystalBlue".to_string(),
                                tint_alias: "".to_string(),
                                tint_id: 0,
                                composite_effect: 0,
                                slot: item::EquipmentSlot::Body,
                            }],
                            head_model: String::from("Char_CloneHead.adr"),
                            hair_model: String::from("Cust_Clone_Hair_BusinessMan.adr"),
                            hair_color: 11,
                            eye_color: 0,
                            skin_tone: String::from("CloneTan"),
                            face_paint: String::from("SquarishTattoo"),
                            facial_hair: String::from(""),
                            unknown14: 0,
                            unknown15: 0.0,
                            unknown16: 0,
                            unknown17: 0,
                            png_name: "Headshot".to_string(),
                            unknown18: 0,
                            png_data: vec![
                                0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00,
                                0x0d, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00,
                                0x00, 0x46, 0x08, 0x06, 0x00, 0x00, 0x00, 0x71, 0x2e, 0xe2, 0x84,
                                0x00, 0x00, 0x22, 0x68, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xed,
                                0x9b, 0x87, 0x53, 0x5b, 0x79, 0xb6, 0xe7, 0xa7, 0xde, 0x38, 0x92,
                                0xa3, 0x50, 0x00, 0x49, 0x20, 0x10, 0x20, 0x04, 0x12, 0x28, 0x20,
                                0x82, 0x24, 0x82, 0xc8, 0x39, 0x08, 0x44, 0xce, 0x19, 0x4c, 0x32,
                                0x19, 0x21, 0x72, 0x8e, 0x06, 0x4c, 0x74, 0xc0, 0x18, 0xdb, 0x6d,
                                0xf7, 0x74, 0xee, 0x99, 0x9e, 0x7e, 0xdd, 0xf6, 0xeb, 0x99, 0x37,
                                0xb9, 0xbb, 0x67, 0xb6, 0x76, 0xdf, 0x56, 0xbd, 0xff, 0x65, 0xf5,
                                0xfd, 0xed, 0x11, 0xfd, 0xf6, 0x55, 0x6d, 0xf5, 0x6c, 0xd5, 0x86,
                                0xe9, 0xc6, 0xf3, 0x6a, 0x6f, 0xd5, 0xa9, 0xdf, 0xbd, 0x92, 0x0c,
                                0xf7, 0x7e, 0xee, 0xf7, 0x7c, 0xcf, 0x39, 0xf2, 0xe5, 0x27, 0x3f,
                                0xf9, 0xff, 0xdb, 0xdb, 0xbb, 0x0d, 0x89, 0x02, 0x6d, 0x03, 0x5c,
                                0xbe, 0xad, 0xc5, 0xc7, 0x17, 0x5d, 0x1c, 0x0e, 0x9b, 0x17, 0x0a,
                                0x6d, 0x57, 0x7d, 0x4e, 0x57, 0xb6, 0xb5, 0x07, 0x85, 0xd8, 0x5a,
                                0x45, 0x81, 0xaf, 0x5b, 0xfd, 0x85, 0x68, 0xe1, 0xf1, 0xd1, 0xea,
                                0xc3, 0x61, 0x4d, 0x9e, 0x9e, 0xac, 0xcb, 0xdb, 0x87, 0x0d, 0xf2,
                                0x78, 0x98, 0x0c, 0x10, 0x62, 0x2d, 0x44, 0xfa, 0xfa, 0x40, 0x1a,
                                0xfe, 0x1f, 0x1f, 0x52, 0x59, 0x80, 0xd8, 0x46, 0xf1, 0xba, 0xcc,
                                0x5f, 0x0c, 0xb3, 0x1f, 0x8f, 0x55, 0xf8, 0xfa, 0xb1, 0x5a, 0x5f,
                                0x0e, 0x9a, 0x29, 0x5a, 0x39, 0x1c, 0x7b, 0x83, 0xa7, 0x07, 0x3a,
                                0xbd, 0xbc, 0x71, 0x97, 0xcb, 0xc5, 0x84, 0xc0, 0xdf, 0x3e, 0xe5,
                                0x2f, 0xc0, 0x82, 0x48, 0x8c, 0x95, 0x20, 0x09, 0x3b, 0x91, 0x86,
                                0xd9, 0x3e, 0x93, 0xcb, 0x8d, 0x57, 0x7d, 0x0d, 0x7f, 0xf3, 0x2d,
                                0x4f, 0x20, 0x7c, 0x93, 0xe5, 0xc3, 0x45, 0xb6, 0xaf, 0x1f, 0x72,
                                0xbc, 0x7c, 0x91, 0xe7, 0xe1, 0xcd, 0xcc, 0x5e, 0x3e, 0x28, 0x73,
                                0xf7, 0x60, 0x0d, 0xde, 0xde, 0x68, 0x21, 0x20, 0xe3, 0x02, 0x01,
                                0x7a, 0xbc, 0x7d, 0xd0, 0x4b, 0xc7, 0xfd, 0x3e, 0x3e, 0x18, 0xe5,
                                0x70, 0x60, 0xe5, 0x71, 0x31, 0x23, 0xe0, 0x13, 0x20, 0x11, 0x16,
                                0xc5, 0x81, 0xd8, 0x08, 0x0e, 0x79, 0x73, 0xd5, 0xd7, 0xf2, 0x37,
                                0xdb, 0x0a, 0x48, 0x25, 0x19, 0xde, 0x5c, 0xa4, 0x7b, 0x73, 0x90,
                                0xea, 0xee, 0xc9, 0x32, 0xdc, 0x3c, 0x59, 0x81, 0x87, 0x17, 0xca,
                                0x3d, 0xbd, 0x51, 0xe5, 0xe9, 0x85, 0x06, 0x0f, 0x4f, 0xd6, 0x41,
                                0x90, 0x3a, 0x3d, 0x3c, 0x31, 0xe8, 0xe3, 0x7d, 0x19, 0x23, 0x0e,
                                0x30, 0xbe, 0xbe, 0x6c, 0xdc, 0x01, 0x87, 0x62, 0x8e, 0xcf, 0xb7,
                                0xcf, 0x09, 0xfc, 0x31, 0xe7, 0x1f, 0x80, 0xcf, 0x23, 0xff, 0x03,
                                0x28, 0xa7, 0xc0, 0x5f, 0xfc, 0x3a, 0xcd, 0xc7, 0x0f, 0x26, 0x4f,
                                0x1f, 0x24, 0xb9, 0x79, 0xd8, 0x4d, 0xae, 0xee, 0xc8, 0x71, 0xf7,
                                0x44, 0xb1, 0x9b, 0x27, 0xcc, 0x6e, 0xee, 0x28, 0x73, 0x75, 0x43,
                                0x15, 0xbd, 0x56, 0xe9, 0xec, 0xc2, 0xaa, 0x5d, 0x5c, 0xd1, 0xee,
                                0xee, 0xce, 0x06, 0xbd, 0x3c, 0x31, 0xe4, 0xe9, 0x49, 0x40, 0x7c,
                                0x30, 0xef, 0xe7, 0x8b, 0x05, 0xae, 0x1f, 0x26, 0x7d, 0xbc, 0xd9,
                                0xb8, 0xaf, 0x0f, 0x9b, 0xf1, 0xf3, 0xc3, 0xa2, 0x50, 0x88, 0x7f,
                                0x94, 0x85, 0xff, 0xfd, 0xc2, 0x29, 0xe0, 0x06, 0xbc, 0xc9, 0xa0,
                                0xf4, 0x49, 0x72, 0xf5, 0x60, 0xc9, 0xae, 0x1e, 0x48, 0x71, 0x71,
                                0x43, 0xb2, 0x93, 0x0b, 0xcb, 0xa0, 0x35, 0xd3, 0xd9, 0x05, 0x59,
                                0x4e, 0x2e, 0xc8, 0xbc, 0xed, 0x84, 0xbc, 0xdb, 0x4e, 0xac, 0xd8,
                                0xd9, 0x19, 0x25, 0x4e, 0xce, 0xac, 0x9e, 0xe0, 0x74, 0xba, 0xb9,
                                0xa1, 0xdf, 0xc3, 0x1d, 0xe3, 0x04, 0x68, 0x96, 0xd4, 0x33, 0x47,
                                0x50, 0xa6, 0xbc, 0xbc, 0xd8, 0x02, 0xd7, 0x17, 0x8b, 0x3c, 0x3f,
                                0x4c, 0x70, 0x7c, 0xed, 0x2b, 0x62, 0x31, 0x7e, 0x17, 0x13, 0xfd,
                                0xf7, 0x07, 0xa7, 0x88, 0x2f, 0x7a, 0x9d, 0xc3, 0xe1, 0x23, 0x99,
                                0x94, 0x91, 0xe4, 0xea, 0x6e, 0x8f, 0xbf, 0xed, 0x0c, 0x83, 0x13,
                                0xc5, 0x2d, 0x67, 0x24, 0xdc, 0xba, 0x0d, 0xdd, 0xcd, 0xdb, 0x88,
                                0xa3, 0x88, 0xbf, 0x79, 0x0b, 0x06, 0x82, 0x93, 0x4c, 0x91, 0x4d,
                                0xef, 0x67, 0xd3, 0x7b, 0x16, 0x82, 0x54, 0x47, 0xd1, 0xe3, 0xee,
                                0xca, 0x06, 0xdd, 0xdd, 0xb0, 0xc4, 0xe7, 0xb0, 0x55, 0x7f, 0x3f,
                                0xb6, 0x2e, 0xe4, 0xda, 0x67, 0x38, 0xde, 0x98, 0xf1, 0xf5, 0x86,
                                0xd5, 0xd7, 0x17, 0xab, 0x81, 0x41, 0x78, 0x23, 0x8f, 0xf8, 0xfb,
                                0x81, 0x53, 0xc4, 0x0f, 0x78, 0x9d, 0xcf, 0x15, 0x20, 0xc5, 0xdd,
                                0x0b, 0x26, 0x52, 0x4b, 0x12, 0x29, 0x23, 0xe1, 0x96, 0x13, 0x12,
                                0x29, 0xe2, 0xe9, 0xc2, 0xd5, 0x04, 0x43, 0x7d, 0xe3, 0x16, 0xa2,
                                0x29, 0x74, 0x14, 0xaa, 0x1b, 0x37, 0x69, 0xbd, 0x89, 0x14, 0x7a,
                                0x3f, 0x81, 0xd6, 0x02, 0x82, 0x64, 0x26, 0x30, 0x55, 0x14, 0x9d,
                                0x9e, 0x6e, 0x18, 0xe7, 0x79, 0x63, 0x23, 0x24, 0x00, 0x6b, 0x81,
                                0x7c, 0xcc, 0xf3, 0x7d, 0xb1, 0x1e, 0xc0, 0xc5, 0x3c, 0x29, 0x67,
                                0x8e, 0xcb, 0x65, 0xeb, 0x92, 0x60, 0x7c, 0xf1, 0xf7, 0x00, 0xa7,
                                0x22, 0x20, 0xc8, 0x56, 0xc4, 0x13, 0xc2, 0xe4, 0xee, 0x8d, 0x74,
                                0x52, 0x8b, 0x81, 0xa0, 0xe8, 0x49, 0x25, 0x3a, 0x02, 0xa2, 0x21,
                                0x85, 0x38, 0x40, 0xc8, 0xaf, 0xdf, 0xbc, 0x84, 0x12, 0x49, 0xab,
                                0x03, 0x8a, 0xec, 0xda, 0x0d, 0x28, 0x6e, 0xdc, 0xb4, 0xc7, 0xd2,
                                0x7e, 0xd4, 0xf5, 0x1b, 0x30, 0x12, 0x38, 0xe3, 0x8d, 0x9b, 0x2c,
                                0xdf, 0xf9, 0x36, 0x0a, 0x9c, 0x9d, 0x50, 0x44, 0x80, 0x7a, 0x79,
                                0xde, 0x6c, 0x4c, 0xc4, 0xc1, 0x7a, 0x58, 0x00, 0xf6, 0xc2, 0x85,
                                0xd8, 0x0c, 0xe0, 0xb2, 0x49, 0x5f, 0x1f, 0x2c, 0x93, 0x21, 0xaf,
                                0x4b, 0x24, 0xf8, 0xec, 0x6d, 0x86, 0xd3, 0xc8, 0xf7, 0x37, 0x96,
                                0xf2, 0x85, 0xaf, 0xb3, 0xa9, 0xfa, 0x64, 0x52, 0x39, 0x4e, 0x77,
                                0x76, 0x47, 0x02, 0xa5, 0x50, 0x2c, 0x29, 0x41, 0x4b, 0x17, 0x1b,
                                0xed, 0x00, 0x71, 0xfd, 0x06, 0x53, 0xd0, 0xc5, 0xcb, 0x29, 0x82,
                                0x7f, 0x7a, 0x8d, 0x29, 0x6e, 0xde, 0xb2, 0x4b, 0x7f, 0x7a, 0x9d,
                                0xc9, 0xe8, 0x38, 0xea, 0xda, 0x75, 0x84, 0xd0, 0xaa, 0xb9, 0x79,
                                0xd3, 0xae, 0xa4, 0x55, 0x77, 0xe3, 0x06, 0x8b, 0xbd, 0x79, 0x13,
                                0x79, 0xae, 0xce, 0x64, 0xd6, 0x2e, 0xa8, 0xf6, 0x74, 0x85, 0x4d,
                                0xcc, 0x61, 0x33, 0xfe, 0x1c, 0x2c, 0x92, 0x72, 0x56, 0xb8, 0x1c,
                                0x87, 0x29, 0x63, 0x9d, 0x7a, 0x9d, 0x13, 0x69, 0xc8, 0xdb, 0xdd,
                                0x08, 0xe6, 0x79, 0x71, 0x1c, 0x9e, 0x82, 0x2c, 0x37, 0x0f, 0xa4,
                                0x39, 0xbb, 0x5e, 0xfa, 0x8a, 0x92, 0x94, 0x70, 0x19, 0x74, 0xb1,
                                0x61, 0xd7, 0xae, 0x33, 0xc7, 0x7e, 0x04, 0xed, 0x4b, 0x09, 0x44,
                                0xe8, 0x35, 0x07, 0x94, 0xeb, 0x90, 0xd2, 0x71, 0x38, 0x1d, 0x07,
                                0x5f, 0xbb, 0xe6, 0x00, 0xc4, 0xe8, 0x73, 0xf4, 0x6f, 0x6e, 0xc0,
                                0x01, 0xc6, 0x70, 0xfb, 0xb6, 0x23, 0xec, 0x0e, 0x38, 0x8d, 0xee,
                                0xae, 0xe8, 0x20, 0x50, 0x2b, 0x42, 0x3f, 0xac, 0x0b, 0xa8, 0x8c,
                                0x93, 0xdf, 0xcc, 0x52, 0x39, 0xdf, 0x08, 0x92, 0xe0, 0xe7, 0xe1,
                                0x92, 0xb7, 0x57, 0x35, 0x09, 0x4e, 0xae, 0x2c, 0x87, 0x52, 0xc8,
                                0xe8, 0xe4, 0x0a, 0xfd, 0x6d, 0x97, 0x4b, 0x53, 0x25, 0x10, 0xcc,
                                0x01, 0x42, 0x41, 0xe9, 0x13, 0x46, 0xab, 0x8c, 0x2e, 0xd8, 0x71,
                                0x1c, 0x4c, 0x17, 0x2f, 0x25, 0xd5, 0x38, 0x5e, 0x0b, 0xbd, 0x76,
                                0x8d, 0x39, 0xc0, 0x84, 0x10, 0x18, 0x5a, 0x99, 0x94, 0x60, 0x45,
                                0xd0, 0xbe, 0x9a, 0x3e, 0x1b, 0x75, 0xfd, 0x1a, 0x4b, 0xbc, 0x75,
                                0x8b, 0x3c, 0xe8, 0x16, 0x0a, 0x9d, 0x6e, 0x63, 0x84, 0xeb, 0x8d,
                                0x7b, 0xa1, 0x42, 0x58, 0xbd, 0x3c, 0xb0, 0x42, 0x25, 0xbd, 0x8f,
                                0x2a, 0xd8, 0xb2, 0x80, 0x87, 0xab, 0xbe, 0xf6, 0xff, 0xe5, 0x56,
                                0x27, 0x08, 0xb0, 0x99, 0x48, 0x29, 0xf9, 0xd4, 0xa7, 0x24, 0x51,
                                0x0a, 0xc5, 0xff, 0x5b, 0xf5, 0x89, 0xa6, 0xf4, 0x09, 0x27, 0x95,
                                0x84, 0xd3, 0x45, 0x3a, 0x20, 0x84, 0xd1, 0xbe, 0x9c, 0xf6, 0x83,
                                0x1d, 0x4a, 0xa1, 0x8b, 0x0f, 0x21, 0x20, 0x61, 0xb4, 0x1f, 0x46,
                                0x90, 0x1c, 0xfb, 0xe1, 0xf4, 0x19, 0x09, 0xad, 0x11, 0x0e, 0x80,
                                0x04, 0xcc, 0x01, 0x48, 0x7b, 0xd3, 0x91, 0x62, 0x37, 0x90, 0x7e,
                                0xeb, 0x26, 0x9b, 0x14, 0x72, 0xd0, 0xe7, 0xe6, 0xc2, 0x86, 0xa8,
                                0x62, 0x59, 0xbd, 0xdc, 0x31, 0xef, 0xed, 0x45, 0x9d, 0xb2, 0xd7,
                                0xdb, 0x09, 0x86, 0x3c, 0xe5, 0xb5, 0xc1, 0xd3, 0xd3, 0x96, 0x43,
                                0x55, 0x28, 0x9b, 0xfa, 0x14, 0x47, 0x25, 0x8a, 0x23, 0xb5, 0xc4,
                                0x90, 0x5a, 0xaa, 0xb4, 0xa1, 0x30, 0xab, 0x82, 0x98, 0x59, 0x15,
                                0xf8, 0x5d, 0xfa, 0x5c, 0xff, 0xee, 0xa2, 0x25, 0xff, 0xb6, 0xef,
                                0x48, 0x23, 0x47, 0x84, 0x3a, 0x60, 0x11, 0x04, 0x4a, 0x2f, 0x04,
                                0x51, 0x38, 0x52, 0x4c, 0x46, 0xc7, 0x11, 0xb4, 0x2a, 0x08, 0x50,
                                0x7e, 0x30, 0xc7, 0x9e, 0x7c, 0xfb, 0xd6, 0xbf, 0xa7, 0xd3, 0x30,
                                0x81, 0x59, 0xf4, 0xf5, 0xa4, 0xf0, 0xc6, 0x00, 0xc1, 0x79, 0x29,
                                0x97, 0x4d, 0x5d, 0x35, 0x87, 0xef, 0x6d, 0x65, 0x1c, 0xee, 0x54,
                                0x2e, 0xb5, 0xf5, 0xd9, 0x2e, 0xe4, 0x2d, 0x94, 0x46, 0x25, 0xc1,
                                0x42, 0x34, 0x18, 0xa2, 0xb0, 0xde, 0x5f, 0x88, 0xa5, 0x76, 0x13,
                                0x5b, 0x68, 0x32, 0xb2, 0xb9, 0x86, 0x44, 0xcc, 0xd6, 0xc5, 0x63,
                                0xa6, 0x26, 0x0e, 0x66, 0xa5, 0x08, 0x71, 0x3c, 0xcf, 0x4b, 0x30,
                                0x21, 0xd7, 0xaf, 0x5f, 0xa6, 0x55, 0x08, 0x29, 0xc6, 0xa1, 0x22,
                                0x4a, 0xab, 0x4b, 0x30, 0xe6, 0x28, 0x01, 0xab, 0x88, 0x11, 0x62,
                                0x24, 0x4f, 0x86, 0x83, 0x8e, 0x78, 0x3c, 0xee, 0x35, 0xd8, 0x3f,
                                0x9c, 0xc9, 0xc6, 0x5a, 0xb1, 0xda, 0x5e, 0xe7, 0xea, 0x84, 0x1e,
                                0xf2, 0x9c, 0x29, 0x6f, 0x0f, 0x4c, 0x7b, 0xba, 0xa3, 0x9f, 0x06,
                                0xd0, 0x5d, 0xa1, 0xff, 0x9b, 0xcf, 0xc2, 0x03, 0xdf, 0x2e, 0x9f,
                                0x19, 0x08, 0x0a, 0x34, 0x66, 0x52, 0x1a, 0x65, 0x93, 0xf1, 0x96,
                                0x87, 0x88, 0xb0, 0x35, 0x64, 0xc6, 0xd6, 0x60, 0x11, 0x36, 0xfb,
                                0xf3, 0xb1, 0xd6, 0x69, 0xc2, 0x4a, 0x4b, 0x12, 0x16, 0x1a, 0x12,
                                0xd8, 0x62, 0x63, 0x22, 0xe6, 0xeb, 0x09, 0x4e, 0x75, 0x2c, 0x6c,
                                0x15, 0x6a, 0x58, 0x2d, 0x2a, 0xb4, 0x26, 0x49, 0x51, 0x18, 0xc1,
                                0x63, 0x45, 0x72, 0x3e, 0x0a, 0xe4, 0x02, 0x4c, 0x9a, 0x95, 0x98,
                                0x2a, 0x8f, 0xc6, 0x42, 0x95, 0x0a, 0x2b, 0x75, 0x1a, 0x6c, 0x35,
                                0x6a, 0xb1, 0xdf, 0x1e, 0x87, 0xe3, 0xae, 0x38, 0xf6, 0x6a, 0x3c,
                                0x0d, 0x5f, 0xed, 0x59, 0xf0, 0xbb, 0x93, 0x3a, 0x76, 0x5c, 0xa6,
                                0xc5, 0x18, 0x41, 0x99, 0xa4, 0x74, 0x72, 0x00, 0x5a, 0xa5, 0x81,
                                0xf3, 0xaa, 0x39, 0x7c, 0x6f, 0x9b, 0x55, 0x46, 0x1a, 0x8b, 0x3d,
                                0xbc, 0x41, 0xa9, 0x04, 0x6b, 0x95, 0x09, 0xdb, 0x43, 0xa5, 0xd8,
                                0xba, 0x5b, 0x84, 0x8d, 0xde, 0x5c, 0xb6, 0xde, 0x91, 0x8a, 0xf5,
                                0xb6, 0x64, 0xfb, 0x6a, 0x93, 0x1e, 0x2b, 0x04, 0x66, 0xa9, 0x3e,
                                0x0e, 0x0b, 0xb5, 0xb1, 0x98, 0xaf, 0xd6, 0x62, 0xc6, 0x12, 0x83,
                                0xa9, 0x32, 0x02, 0x41, 0x30, 0x26, 0x4b, 0x14, 0x98, 0xa2, 0xb0,
                                0x96, 0x2a, 0x31, 0x53, 0x16, 0x8d, 0xc5, 0xca, 0x18, 0xac, 0xd5,
                                0xaa, 0xb1, 0xd1, 0xa0, 0x61, 0xf7, 0x9a, 0x62, 0xd9, 0x71, 0x87,
                                0x0e, 0xcf, 0x86, 0x8c, 0xf8, 0x62, 0xa3, 0x00, 0xbf, 0x3d, 0xb2,
                                0xb0, 0x3f, 0x3e, 0xac, 0x67, 0x0f, 0xca, 0x62, 0x31, 0x4e, 0x70,
                                0x16, 0xa8, 0x6c, 0x8f, 0xd1, 0x54, 0x7e, 0xd5, 0x1c, 0xbe, 0xb7,
                                0x55, 0x72, 0x38, 0xb6, 0x02, 0x37, 0x0f, 0x56, 0x1d, 0x2a, 0xc2,
                                0xce, 0x88, 0x05, 0xbb, 0xc3, 0xc5, 0xd8, 0xb9, 0x5b, 0x80, 0xad,
                                0xde, 0x6c, 0x6c, 0x74, 0xa6, 0x62, 0xad, 0x35, 0x09, 0x6b, 0x4d,
                                0x89, 0x58, 0x6b, 0x48, 0x20, 0x15, 0xc4, 0x61, 0xa9, 0x26, 0xf6,
                                0x32, 0xe6, 0x2b, 0x54, 0x98, 0xb5, 0x44, 0x63, 0x9a, 0xe0, 0xd8,
                                0xcc, 0x51, 0x14, 0x0a, 0xcc, 0x50, 0xcc, 0xd1, 0xf1, 0x42, 0x45,
                                0x0c, 0x56, 0xab, 0x28, 0x6a, 0x62, 0xb0, 0xd3, 0xa4, 0xc1, 0x41,
                                0x9b, 0x0e, 0x4f, 0x07, 0x8c, 0xf8, 0xc5, 0x52, 0x16, 0x7e, 0x7b,
                                0x60, 0xc6, 0x9f, 0x1e, 0x56, 0xe3, 0xcf, 0x67, 0x8d, 0x97, 0x60,
                                0x66, 0xbd, 0x3d, 0xd9, 0x32, 0xcf, 0x8f, 0x5d, 0x35, 0x87, 0xef,
                                0x6d, 0x16, 0x5f, 0xee, 0x1b, 0x47, 0x1a, 0x75, 0x9b, 0x62, 0xb0,
                                0x3f, 0x56, 0x81, 0x7d, 0x4a, 0xa5, 0xbd, 0xa1, 0x02, 0xec, 0xf4,
                                0x65, 0xb3, 0xcd, 0x2e, 0x13, 0x36, 0x3a, 0x48, 0x31, 0x8d, 0xf1,
                                0x58, 0x25, 0xb5, 0xac, 0xd4, 0xc5, 0x62, 0xa5, 0x56, 0x4b, 0x11,
                                0x8b, 0x45, 0x4a, 0x97, 0xb9, 0xca, 0x68, 0x02, 0x14, 0x8d, 0xd9,
                                0xf2, 0x28, 0xcc, 0x96, 0x45, 0x61, 0xa6, 0x5c, 0x41, 0xab, 0xe2,
                                0xf2, 0x78, 0xb1, 0x52, 0x81, 0xa5, 0xaa, 0x68, 0xb6, 0x5e, 0x1d,
                                0xc3, 0xf6, 0x08, 0xcc, 0x59, 0xbf, 0x01, 0x9f, 0xcc, 0x65, 0xe1,
                                0xab, 0x9d, 0x22, 0xf6, 0x87, 0x63, 0x0b, 0xfb, 0xe6, 0x71, 0x03,
                                0x9e, 0x54, 0x50, 0x5a, 0x52, 0x2a, 0x2d, 0xfb, 0xbf, 0x85, 0x25,
                                0xbb, 0xd8, 0xd3, 0x17, 0x69, 0x54, 0x8d, 0x76, 0xad, 0x95, 0xec,
                                0xfe, 0x38, 0xc5, 0x48, 0x19, 0xdb, 0x1b, 0xca, 0x63, 0x7b, 0x83,
                                0xb9, 0xd8, 0xee, 0x71, 0x80, 0x31, 0x62, 0x8d, 0xc0, 0xac, 0xd4,
                                0x6b, 0xb1, 0x4c, 0xe9, 0xb1, 0x54, 0xab, 0xc1, 0x72, 0x8d, 0x06,
                                0x8b, 0xd5, 0x04, 0xa6, 0x42, 0x49, 0xe1, 0x00, 0x11, 0x49, 0x29,
                                0x24, 0x27, 0x30, 0x0e, 0x40, 0x91, 0x97, 0xb1, 0x58, 0xa1, 0xb0,
                                0xaf, 0x54, 0xab, 0xec, 0x8e, 0x94, 0xda, 0x6d, 0xd1, 0xe1, 0x61,
                                0xaf, 0x1e, 0x3f, 0xb3, 0x92, 0xcf, 0x6c, 0x17, 0xda, 0xff, 0x70,
                                0x68, 0xc1, 0xb7, 0x67, 0x0d, 0xf8, 0xd4, 0x9a, 0x8b, 0x61, 0x52,
                                0xcd, 0x3c, 0x8d, 0x08, 0x2f, 0x23, 0xdf, 0xa2, 0xaf, 0x42, 0x97,
                                0xb4, 0xd1, 0xc6, 0x72, 0x5f, 0x1e, 0xcc, 0xa1, 0x62, 0x1c, 0xd8,
                                0x6a, 0x70, 0x32, 0x5d, 0x8b, 0x53, 0x5b, 0x05, 0x4e, 0xac, 0x65,
                                0x38, 0x1c, 0x2d, 0xc4, 0x7e, 0x5f, 0x1a, 0xdb, 0xed, 0x49, 0xc6,
                                0x66, 0x5b, 0x02, 0x5b, 0x6b, 0xa2, 0x14, 0xaa, 0xd3, 0xb0, 0xc5,
                                0x7a, 0x1d, 0x45, 0x2c, 0x79, 0x8d, 0x96, 0x2d, 0xd6, 0xc5, 0xda,
                                0xe7, 0x49, 0x39, 0xb3, 0xa4, 0x1a, 0x5b, 0xb9, 0x82, 0xcd, 0x58,
                                0x94, 0x6c, 0x96, 0x54, 0x33, 0x5f, 0x11, 0x85, 0x85, 0xca, 0x68,
                                0xb6, 0xec, 0x50, 0x4c, 0x4d, 0x34, 0xdb, 0x6f, 0x8b, 0xc3, 0xc3,
                                0x3b, 0xc9, 0x78, 0x35, 0x99, 0x89, 0x2f, 0x37, 0x8b, 0xf0, 0xfb,
                                0xe3, 0x2a, 0x7c, 0x43, 0x60, 0xbe, 0x79, 0xd2, 0x88, 0x6e, 0x77,
                                0x17, 0x38, 0xbe, 0x96, 0x78, 0x1e, 0x16, 0xf8, 0xf6, 0x80, 0xe9,
                                0x8d, 0x90, 0x4f, 0x39, 0xd2, 0xa8, 0x3d, 0x45, 0x8d, 0xe3, 0x99,
                                0x7a, 0x9c, 0x4e, 0x57, 0xe3, 0xd4, 0x6a, 0x86, 0xb5, 0x32, 0x81,
                                0xd5, 0x27, 0x86, 0xb0, 0xf1, 0x62, 0x15, 0x76, 0x5a, 0xf4, 0xd8,
                                0x6a, 0x4d, 0xc0, 0x7a, 0xb3, 0x8e, 0x6d, 0x34, 0x53, 0x4a, 0x35,
                                0x93, 0xd7, 0x38, 0x14, 0xe4, 0x88, 0x86, 0x38, 0xb6, 0x48, 0xea,
                                0x99, 0xab, 0x8a, 0xc6, 0x4c, 0x95, 0x82, 0xcd, 0x91, 0xa7, 0x2c,
                                0xd6, 0xa8, 0xe9, 0x75, 0x1d, 0xa9, 0x4b, 0x83, 0x95, 0x2a, 0x25,
                                0x5b, 0xa7, 0xf7, 0xb6, 0xab, 0x63, 0xb0, 0x57, 0xaf, 0x65, 0x17,
                                0x83, 0xc9, 0xf8, 0xc7, 0x35, 0x07, 0x98, 0x6a, 0xfb, 0xd7, 0x67,
                                0xf5, 0xf8, 0xf6, 0x69, 0x33, 0xa6, 0xd5, 0x41, 0x97, 0x15, 0xea,
                                0xdd, 0xc8, 0xe0, 0xb7, 0x07, 0x4c, 0xbf, 0x2c, 0xc2, 0x96, 0xe1,
                                0xe2, 0xc6, 0x3a, 0x4d, 0x6a, 0x1c, 0x4d, 0x57, 0xb3, 0xb6, 0x94,
                                0x48, 0xe4, 0x48, 0xb8, 0x4c, 0x41, 0x33, 0x4e, 0xc4, 0xad, 0x9b,
                                0x08, 0xbd, 0x45, 0xdd, 0x2e, 0xad, 0x8e, 0xa8, 0x52, 0x07, 0x60,
                                0xbd, 0x36, 0x9a, 0x6d, 0xb6, 0xc4, 0x63, 0xbd, 0x25, 0x8e, 0x6d,
                                0xb6, 0x25, 0x62, 0x93, 0xa0, 0x2d, 0xd7, 0x69, 0x49, 0x1d, 0x31,
                                0x97, 0x25, 0x7a, 0x9e, 0x00, 0x2c, 0x50, 0x8a, 0x2d, 0xd6, 0xa8,
                                0x70, 0x27, 0x4d, 0xca, 0x0c, 0x7c, 0x37, 0x48, 0x6f, 0x5e, 0x63,
                                0xb2, 0x5b, 0xd4, 0x18, 0xd2, 0xcf, 0x52, 0xdf, 0xbe, 0x89, 0x9a,
                                0x30, 0x3f, 0x9c, 0xf7, 0xe8, 0xf1, 0x87, 0x53, 0x52, 0xcd, 0x79,
                                0x13, 0x0e, 0xca, 0x35, 0xac, 0xdf, 0xc3, 0x15, 0xf7, 0x43, 0xa5,
                                0x6f, 0x8f, 0x01, 0xd7, 0x08, 0x44, 0xc8, 0x70, 0xa1, 0x6e, 0x34,
                                0x4d, 0xc5, 0x16, 0x9a, 0x33, 0xd1, 0x6a, 0x8c, 0xb8, 0xbc, 0xdb,
                                0x23, 0x05, 0x74, 0x61, 0x19, 0x4a, 0x98, 0x63, 0xc4, 0x48, 0x0d,
                                0xe2, 0x40, 0xed, 0xe3, 0x8a, 0xb0, 0xdb, 0xb7, 0xec, 0x0e, 0x40,
                                0x15, 0x2a, 0x7f, 0xb6, 0x41, 0x25, 0x78, 0xab, 0x95, 0x00, 0x51,
                                0xb5, 0x72, 0x54, 0xa8, 0xc5, 0x2a, 0x07, 0x98, 0x18, 0x2c, 0x55,
                                0xab, 0x71, 0x27, 0x3d, 0x0c, 0x7a, 0x7f, 0x0f, 0x02, 0x42, 0xcd,
                                0x1f, 0x85, 0xd6, 0xc7, 0x09, 0xa9, 0x42, 0xea, 0x93, 0x82, 0xbc,
                                0x51, 0x1f, 0xe9, 0x87, 0xbb, 0xf1, 0xfe, 0x28, 0x72, 0xb9, 0xcd,
                                0x76, 0xcc, 0x31, 0x04, 0xa6, 0x01, 0x7b, 0xe5, 0x5a, 0xdc, 0xf1,
                                0x70, 0x61, 0x87, 0xe1, 0x61, 0x6f, 0x8f, 0x01, 0xf7, 0x28, 0xc3,
                                0x61, 0x72, 0x7c, 0x5f, 0x9b, 0xa1, 0xc1, 0xe9, 0x4c, 0x15, 0x0e,
                                0x47, 0x72, 0xa9, 0x41, 0xd3, 0xa2, 0xc5, 0xa4, 0x41, 0x55, 0x82,
                                0x02, 0xe6, 0xd8, 0x50, 0x58, 0x28, 0x1a, 0x13, 0x43, 0x51, 0x41,
                                0x4d, 0x5c, 0x5e, 0xb0, 0x2f, 0xa4, 0x74, 0xe7, 0x2b, 0x35, 0x42,
                                0xb6, 0xd5, 0x1c, 0x47, 0x60, 0x12, 0x2e, 0x61, 0x2c, 0x91, 0x62,
                                0x16, 0x2b, 0x95, 0x58, 0xb2, 0x28, 0x10, 0x72, 0x09, 0xe4, 0x1a,
                                0xd2, 0x85, 0xee, 0x68, 0x50, 0xf2, 0x51, 0x1e, 0xc1, 0x47, 0xb1,
                                0x42, 0x80, 0x1a, 0x4d, 0x00, 0x46, 0x4c, 0xa1, 0x38, 0xae, 0x8e,
                                0xc4, 0xe7, 0x53, 0x46, 0xbc, 0x3f, 0x9c, 0x8c, 0x6f, 0x2e, 0x1a,
                                0xb1, 0x4f, 0x95, 0xa9, 0x87, 0x14, 0x73, 0x2c, 0x0b, 0x7d, 0x3b,
                                0xc0, 0xec, 0xde, 0x49, 0x7d, 0xbd, 0xdd, 0x93, 0xca, 0x92, 0x9c,
                                0x9c, 0xd1, 0x99, 0xa5, 0xc5, 0x83, 0xb9, 0x1a, 0x76, 0x34, 0x92,
                                0x8d, 0xa6, 0x94, 0x70, 0x18, 0xe4, 0x52, 0x68, 0x83, 0x45, 0x50,
                                0x07, 0x0b, 0x60, 0x94, 0x89, 0x91, 0xaf, 0x0a, 0x45, 0x99, 0x3a,
                                0x14, 0xb5, 0x9a, 0x40, 0xd6, 0x95, 0x12, 0xc6, 0x7a, 0x52, 0x03,
                                0xb1, 0x56, 0xa7, 0x64, 0x6b, 0x0e, 0x2f, 0x21, 0x28, 0xcb, 0x55,
                                0x4a, 0xfb, 0x72, 0x45, 0x24, 0xa6, 0xb3, 0xc4, 0xb0, 0xc8, 0x39,
                                0xa8, 0x8b, 0xe6, 0xc2, 0x12, 0x15, 0x00, 0x4b, 0x4c, 0x30, 0x4a,
                                0x94, 0xc1, 0xc8, 0x53, 0x04, 0xa1, 0x38, 0x26, 0x10, 0x1d, 0x86,
                                0x70, 0xac, 0x14, 0x47, 0xe3, 0xe3, 0xf1, 0x44, 0xf6, 0x87, 0xa3,
                                0x12, 0x7c, 0xf3, 0xb4, 0x81, 0xf5, 0x45, 0x8b, 0xd0, 0x49, 0x33,
                                0xd4, 0x91, 0x2e, 0x82, 0xfd, 0x17, 0x43, 0xe8, 0xd5, 0x8f, 0x05,
                                0x6b, 0xad, 0x0e, 0x03, 0xd5, 0xa2, 0x54, 0xcc, 0x41, 0x57, 0x56,
                                0x2c, 0xce, 0x16, 0xc9, 0x7c, 0x27, 0x0a, 0x50, 0x6b, 0x08, 0x81,
                                0x9f, 0x87, 0x1b, 0x3c, 0x9d, 0x9d, 0x99, 0x37, 0x0d, 0x7c, 0x1e,
                                0x4e, 0xb7, 0xc0, 0x27, 0x73, 0x94, 0x0b, 0xfd, 0xec, 0x05, 0x9a,
                                0x70, 0x54, 0xc6, 0x4a, 0x31, 0x60, 0x14, 0xdb, 0x17, 0xcc, 0x32,
                                0x6c, 0x50, 0x75, 0x5a, 0x72, 0x28, 0x85, 0xa0, 0xcc, 0x16, 0x48,
                                0x30, 0x98, 0xc0, 0x45, 0x9d, 0x92, 0xcb, 0x2c, 0x8a, 0x00, 0x66,
                                0x8a, 0x8c, 0x44, 0x54, 0x00, 0x1f, 0x02, 0x0f, 0x67, 0xf0, 0xdc,
                                0x6f, 0xc3, 0xdf, 0xc3, 0x09, 0x52, 0x8e, 0x3b, 0x0a, 0xa3, 0xc4,
                                0xec, 0xc3, 0x91, 0x38, 0xfc, 0xfe, 0xb0, 0x04, 0xdf, 0x5e, 0x34,
                                0x20, 0xc7, 0xe9, 0x26, 0x46, 0x49, 0x55, 0x17, 0xbd, 0x74, 0x0e,
                                0x9d, 0xda, 0xd7, 0x57, 0xcd, 0xe5, 0x27, 0xeb, 0x54, 0x42, 0x57,
                                0x6a, 0x94, 0xe8, 0xd4, 0x06, 0xa2, 0x9b, 0x14, 0xf3, 0x64, 0xa5,
                                0x01, 0x0f, 0x6d, 0x25, 0x58, 0xa4, 0x6a, 0x52, 0x62, 0x32, 0x60,
                                0x66, 0x6d, 0x08, 0xee, 0xf2, 0x1b, 0xf0, 0x0e, 0x71, 0x85, 0x3c,
                                0x45, 0x0e, 0x2f, 0xce, 0x75, 0x26, 0x25, 0x9f, 0x28, 0x24, 0x15,
                                0x74, 0xc4, 0xfa, 0x63, 0x24, 0x3d, 0x10, 0x9b, 0x34, 0x0f, 0x2d,
                                0x58, 0xa8, 0x1a, 0x95, 0x84, 0x61, 0x3c, 0x35, 0x00, 0x1d, 0x1a,
                                0x2e, 0x6a, 0x28, 0x7d, 0xf4, 0x41, 0x5c, 0x78, 0x73, 0x6f, 0x41,
                                0x10, 0xe8, 0xc3, 0xa4, 0x11, 0x01, 0xf0, 0xe6, 0xdc, 0x44, 0x7c,
                                0x62, 0x30, 0x44, 0x9e, 0x2e, 0x2c, 0x23, 0x9c, 0x8f, 0x37, 0x2b,
                                0x69, 0xf8, 0xfa, 0xb4, 0x9c, 0xc0, 0xd4, 0x23, 0xcf, 0xc5, 0x09,
                                0x1b, 0x29, 0x22, 0x3c, 0x69, 0x57, 0xe0, 0xa0, 0x29, 0xea, 0xea,
                                0xd3, 0x69, 0xab, 0x33, 0x1e, 0x1b, 0xad, 0xb1, 0xb8, 0xa3, 0x0b,
                                0x44, 0x7f, 0x96, 0x06, 0xe7, 0xeb, 0x2d, 0x78, 0xbc, 0x58, 0xcd,
                                0x0e, 0x06, 0x52, 0xd1, 0x95, 0x4d, 0xe5, 0xf5, 0x60, 0x01, 0x1c,
                                0x83, 0x2b, 0x9c, 0x82, 0xfe, 0x01, 0xce, 0xfc, 0x9f, 0xc2, 0x59,
                                0xf6, 0x53, 0xa4, 0xd3, 0x7c, 0xd4, 0x96, 0xa3, 0x43, 0x77, 0x3c,
                                0x1f, 0x23, 0x69, 0x81, 0xa4, 0x14, 0xea, 0x5d, 0x4a, 0x28, 0x85,
                                0x0a, 0xc3, 0x60, 0xcd, 0xf0, 0x47, 0x9b, 0x96, 0x8b, 0xbc, 0x70,
                                0xae, 0xbd, 0xac, 0x3e, 0x13, 0x2e, 0xf2, 0x7f, 0x80, 0x1b, 0xf7,
                                0x06, 0x3c, 0x28, 0x5c, 0x24, 0x3f, 0x61, 0x35, 0xed, 0x46, 0x9c,
                                0x2d, 0x75, 0x93, 0x0f, 0xa9, 0xd8, 0xef, 0xef, 0x17, 0xe2, 0xdb,
                                0xc7, 0x15, 0xf8, 0x33, 0x29, 0xa6, 0x8c, 0xa6, 0xed, 0xf3, 0x8a,
                                0x50, 0x3c, 0xeb, 0x90, 0xe3, 0xb4, 0x2d, 0xf2, 0x6a, 0x2b, 0xd3,
                                0xa6, 0x2e, 0xda, 0xb8, 0x68, 0x56, 0xbd, 0xd9, 0xe9, 0x8a, 0x77,
                                0x80, 0x61, 0x77, 0xb3, 0xd4, 0xb8, 0xd8, 0xea, 0xc0, 0x93, 0xd5,
                                0x26, 0x76, 0x3c, 0x9e, 0xc3, 0xd6, 0x9b, 0xd3, 0xa9, 0xec, 0x26,
                                0x63, 0xbc, 0x28, 0x11, 0x03, 0x39, 0x1a, 0x74, 0xa5, 0xc8, 0x58,
                                0x5b, 0x72, 0x38, 0xba, 0xd3, 0x22, 0xd1, 0x65, 0x8a, 0x64, 0x83,
                                0x74, 0x87, 0xa7, 0x0a, 0xc2, 0xc8, 0x5b, 0xa2, 0x31, 0x59, 0x14,
                                0x89, 0xf9, 0x92, 0x70, 0xd8, 0x32, 0x03, 0x58, 0x6f, 0x02, 0x97,
                                0xcd, 0xe7, 0x4b, 0x30, 0xdb, 0x53, 0x8c, 0x64, 0x03, 0x07, 0x26,
                                0xbd, 0x37, 0x72, 0x53, 0xf8, 0x2c, 0x21, 0x93, 0x8f, 0xd5, 0x81,
                                0x0c, 0xec, 0xb5, 0x26, 0xe3, 0x8b, 0xf9, 0x54, 0xfc, 0xe9, 0x41,
                                0x19, 0xbe, 0x3d, 0xaf, 0x64, 0x7f, 0xbe, 0xa8, 0x43, 0x3b, 0xa9,
                                0xe8, 0xa3, 0xfe, 0x48, 0xbc, 0x37, 0x18, 0x8d, 0x5f, 0x59, 0xb5,
                                0x57, 0xdf, 0xcb, 0x3c, 0x1d, 0x35, 0xda, 0xb6, 0x3b, 0xe3, 0xb0,
                                0x55, 0x17, 0x61, 0x5f, 0xac, 0x4f, 0xc4, 0x33, 0x02, 0x73, 0xb1,
                                0xd1, 0xce, 0xce, 0xe6, 0x2b, 0x70, 0xbf, 0x37, 0x83, 0xed, 0xb4,
                                0x18, 0xa8, 0xe2, 0x24, 0x62, 0xce, 0x92, 0x68, 0x9f, 0x29, 0x37,
                                0xd8, 0x67, 0x4b, 0xd4, 0x98, 0x2b, 0xa6, 0x96, 0x9f, 0x62, 0x26,
                                0x3f, 0x14, 0x0e, 0xa5, 0x2c, 0xd1, 0xb0, 0x68, 0xa5, 0x75, 0xbd,
                                0x5c, 0x8e, 0xa5, 0xa2, 0x10, 0x4c, 0xa6, 0x89, 0xd8, 0x78, 0xba,
                                0x08, 0xfd, 0x26, 0x29, 0xeb, 0x33, 0x85, 0x61, 0x90, 0x4a, 0xb7,
                                0x2d, 0x57, 0x86, 0x85, 0x62, 0x19, 0xb6, 0x48, 0x5d, 0xef, 0xf6,
                                0xab, 0xf1, 0xd5, 0x7a, 0x81, 0xfd, 0xeb, 0x87, 0x16, 0xfc, 0x85,
                                0xa0, 0x7c, 0x7b, 0x5e, 0x8d, 0x31, 0x5f, 0x4f, 0xfb, 0xa7, 0x03,
                                0x51, 0x64, 0xc8, 0x1a, 0x3c, 0xce, 0x0d, 0x67, 0xff, 0x9a, 0xa1,
                                0xb9, 0x3a, 0x03, 0xee, 0x0e, 0x91, 0xda, 0x66, 0xf3, 0x23, 0xde,
                                0x6c, 0x93, 0x62, 0xd6, 0x2b, 0x25, 0x38, 0x1e, 0x34, 0xe2, 0xe9,
                                0x5a, 0x13, 0x7b, 0xb1, 0xdd, 0x89, 0xa7, 0xe4, 0x35, 0x4f, 0x08,
                                0xce, 0xc3, 0xf1, 0x02, 0x1c, 0xf4, 0x9b, 0xb0, 0xd3, 0x9e, 0x80,
                                0xcd, 0x26, 0x1d, 0x36, 0x1b, 0xb4, 0x58, 0xa7, 0xce, 0x76, 0xc9,
                                0x2c, 0x67, 0x4b, 0x74, 0xa1, 0xb3, 0xa5, 0x91, 0x04, 0x2d, 0x86,
                                0x4d, 0x14, 0xc9, 0x71, 0xaf, 0x2a, 0x12, 0x6b, 0xa5, 0xa1, 0xcc,
                                0x96, 0x15, 0xc4, 0x66, 0xf3, 0x82, 0x31, 0x9b, 0x1f, 0x8c, 0xc5,
                                0x62, 0x52, 0x54, 0x99, 0x8c, 0x6d, 0xd2, 0x7b, 0x7b, 0xf5, 0x0a,
                                0x9c, 0xb6, 0xaa, 0xf0, 0x6a, 0x28, 0x1e, 0x5f, 0xac, 0xe7, 0xe2,
                                0x8f, 0x27, 0xe5, 0xf8, 0x4f, 0x4f, 0x6b, 0xf1, 0xcd, 0x83, 0x72,
                                0xbc, 0xd7, 0x24, 0xc5, 0xcf, 0xef, 0x84, 0xd0, 0xdc, 0xa4, 0x61,
                                0xff, 0x54, 0x11, 0x65, 0xfb, 0xd7, 0xcc, 0x2b, 0x02, 0xd3, 0x16,
                                0x1c, 0x6a, 0xeb, 0x0a, 0x09, 0xb1, 0xfd, 0x71, 0x25, 0xd5, 0x78,
                                0xaf, 0x2b, 0x11, 0xf7, 0xe8, 0x84, 0x0f, 0xbb, 0x62, 0xf0, 0x74,
                                0xb5, 0x0e, 0x17, 0x6b, 0xcd, 0xec, 0x62, 0xb5, 0x01, 0x4f, 0x97,
                                0xeb, 0xd9, 0x93, 0xb9, 0x0a, 0x3c, 0x98, 0xc8, 0x67, 0x27, 0x77,
                                0xd3, 0xed, 0x7b, 0x9d, 0x7a, 0x6c, 0x3b, 0xfa, 0x16, 0x02, 0xb3,
                                0x42, 0x03, 0xe2, 0x52, 0x49, 0x04, 0x66, 0x1d, 0x5f, 0x33, 0x54,
                                0xa8, 0x31, 0x55, 0x1a, 0xc5, 0xee, 0x37, 0x28, 0xd9, 0xbd, 0x4a,
                                0x19, 0x5b, 0x20, 0x20, 0x73, 0xf9, 0x21, 0x58, 0x26, 0x33, 0x5e,
                                0xb3, 0x44, 0x62, 0xab, 0x36, 0x86, 0xe6, 0xa4, 0x58, 0x9c, 0xf6,
                                0x25, 0xe2, 0x62, 0x24, 0x05, 0xef, 0xd9, 0xd2, 0xf0, 0x7a, 0xbb,
                                0x10, 0x5f, 0x3f, 0xaa, 0xc2, 0x5f, 0xce, 0x6b, 0xf0, 0xc7, 0xbd,
                                0x1c, 0x7c, 0x39, 0x22, 0xc3, 0x67, 0x03, 0xa1, 0xf8, 0xc5, 0x94,
                                0x0a, 0x3f, 0x93, 0x89, 0x6d, 0xff, 0x92, 0xa4, 0xf8, 0xf1, 0xc1,
                                0xdc, 0x91, 0xc9, 0x8c, 0xb5, 0xc2, 0xa0, 0x7f, 0x2f, 0x89, 0x87,
                                0xdd, 0x89, 0x6f, 0xf6, 0x48, 0x35, 0x87, 0x5d, 0x24, 0x63, 0x5b,
                                0x11, 0x7b, 0xee, 0x80, 0xb2, 0x52, 0x8b, 0xe7, 0xab, 0xb5, 0x78,
                                0x3a, 0x6f, 0xc1, 0x63, 0x6b, 0x01, 0x1e, 0x0c, 0x67, 0xe0, 0xf0,
                                0x4e, 0x12, 0xf6, 0x68, 0x04, 0xd8, 0xa9, 0x8f, 0xc3, 0x52, 0x59,
                                0x14, 0x5b, 0x24, 0xd5, 0x38, 0xbe, 0x76, 0xa0, 0x41, 0x12, 0x73,
                                0xd5, 0x6a, 0xfb, 0x6e, 0x33, 0xf5, 0x41, 0xad, 0x31, 0x58, 0x2d,
                                0x0c, 0xc5, 0x72, 0xa1, 0xcc, 0xbe, 0x5c, 0x1a, 0x8e, 0x0d, 0xaa,
                                0x78, 0xdb, 0x8d, 0x1a, 0x76, 0x4c, 0xf0, 0xcf, 0x87, 0x52, 0xf1,
                                0x6a, 0x2a, 0x1b, 0x1f, 0x2e, 0xe4, 0xb2, 0xaf, 0xee, 0x15, 0xe3,
                                0xeb, 0x87, 0x04, 0xe6, 0x61, 0x25, 0x7e, 0xb5, 0x10, 0xcf, 0x3e,
                                0x1b, 0x8c, 0xc0, 0x67, 0xa3, 0x2a, 0x7c, 0x35, 0xa5, 0xbc, 0x7c,
                                0x4c, 0x64, 0x4b, 0x2c, 0xfa, 0x71, 0x2b, 0x13, 0x29, 0xc5, 0x58,
                                0x11, 0x10, 0xf8, 0xbd, 0x67, 0x54, 0xce, 0xc6, 0x73, 0xdf, 0x9c,
                                0xdc, 0x4d, 0xc3, 0xe9, 0xb0, 0x89, 0x3d, 0x5b, 0xae, 0xc5, 0xb3,
                                0xa5, 0x1a, 0x3c, 0x5f, 0xa8, 0xc0, 0xb3, 0x59, 0x33, 0xce, 0x27,
                                0x0b, 0xf1, 0xe0, 0x6e, 0x06, 0x8e, 0x69, 0x32, 0xbe, 0xdf, 0x9e,
                                0x48, 0x0a, 0xa0, 0x2e, 0xb7, 0x34, 0x82, 0x6d, 0xd4, 0x44, 0x63,
                                0xa3, 0x5a, 0xcd, 0x56, 0xc8, 0x7c, 0x97, 0x68, 0x92, 0x5e, 0xb3,
                                0x44, 0xe1, 0xb8, 0x31, 0x0a, 0x87, 0x75, 0xe4, 0x35, 0xa4, 0x98,
                                0x55, 0xea, 0x71, 0xb6, 0xeb, 0x94, 0xd8, 0x6b, 0x8e, 0xc5, 0x03,
                                0x9a, 0x8b, 0x2e, 0x08, 0xcc, 0xbb, 0xd6, 0x4c, 0x7c, 0x3a, 0x97,
                                0xcd, 0x7e, 0xbd, 0x53, 0x8c, 0x3f, 0x1d, 0x53, 0xa9, 0x3e, 0x2a,
                                0xc4, 0x17, 0xc3, 0x72, 0x7c, 0xda, 0x4f, 0xfe, 0x32, 0xac, 0x05,
                                0x7b, 0x68, 0xb8, 0x54, 0xca, 0x7f, 0x36, 0x28, 0x8c, 0x5b, 0xc1,
                                0x41, 0x3f, 0xde, 0xb3, 0x34, 0x8d, 0xc1, 0xd2, 0xbf, 0x2a, 0xd1,
                                0x81, 0x08, 0xa9, 0x6d, 0xb7, 0x55, 0x83, 0xf9, 0x82, 0x18, 0x5c,
                                0x90, 0x4a, 0x9e, 0xcd, 0x57, 0xe1, 0xd9, 0x5c, 0x39, 0xce, 0x6d,
                                0xa5, 0x78, 0x4c, 0x3e, 0x73, 0x32, 0x98, 0x89, 0xfb, 0x5d, 0xc9,
                                0xd8, 0x69, 0xa2, 0xe9, 0xba, 0x22, 0x9a, 0x2d, 0x14, 0x04, 0x63,
                                0xad, 0x84, 0x2e, 0x9e, 0xcc, 0x76, 0xad, 0x50, 0xc2, 0x96, 0x72,
                                0xc4, 0x98, 0xcb, 0x14, 0x60, 0x3e, 0x4b, 0x88, 0xe3, 0x1a, 0x19,
                                0x96, 0x72, 0x25, 0x58, 0x29, 0x0a, 0x63, 0xdb, 0x55, 0x0a, 0xec,
                                0x35, 0x69, 0x71, 0xdc, 0x9e, 0x68, 0x7f, 0x7c, 0x47, 0x8f, 0x57,
                                0x34, 0x02, 0x7c, 0x62, 0x4b, 0xc7, 0x3f, 0xef, 0x14, 0xe2, 0x8f,
                                0xfb, 0x45, 0xf8, 0x6a, 0x3e, 0x09, 0x9f, 0x0c, 0x2a, 0xd9, 0xc7,
                                0xe3, 0x7a, 0x7c, 0x5d, 0xa3, 0xfa, 0x9f, 0xaa, 0xd1, 0x56, 0x70,
                                0xe0, 0xeb, 0xdd, 0xf0, 0xd0, 0x1f, 0xa7, 0x42, 0xd5, 0x8a, 0xfe,
                                0xfa, 0xb7, 0xf0, 0x65, 0x3c, 0x7f, 0x58, 0xc4, 0x41, 0xa8, 0x17,
                                0x07, 0xe2, 0x89, 0xad, 0x88, 0x94, 0x42, 0x70, 0xa6, 0xcd, 0x78,
                                0x3a, 0x55, 0x84, 0xb3, 0xb1, 0x5c, 0x9c, 0xf6, 0x67, 0xe0, 0xa8,
                                0x3b, 0xd9, 0xbe, 0xd3, 0x18, 0x8b, 0xad, 0x1a, 0x0d, 0x56, 0x4a,
                                0x64, 0xb8, 0x1b, 0xe7, 0x8b, 0xd1, 0x14, 0x6a, 0x0c, 0x95, 0x6e,
                                0x8e, 0x60, 0x77, 0x14, 0x1e, 0xe8, 0x8e, 0x72, 0x67, 0xe3, 0x7a,
                                0x3f, 0x2c, 0xe7, 0x49, 0xb0, 0x5e, 0x14, 0x8e, 0xed, 0xf2, 0x28,
                                0xec, 0x53, 0xb3, 0x78, 0xd4, 0xac, 0x63, 0x8f, 0xbb, 0x13, 0xd9,
                                0xcb, 0x21, 0x23, 0x7e, 0x3e, 0x93, 0x8e, 0x5f, 0xad, 0xe7, 0xb2,
                                0x3f, 0xec, 0xe4, 0xe2, 0x5d, 0x4a, 0xbf, 0x8b, 0x06, 0x29, 0x1e,
                                0xaa, 0x24, 0xb8, 0x90, 0x7d, 0xff, 0x69, 0xab, 0x17, 0xca, 0xc8,
                                0xab, 0xab, 0x4e, 0x2b, 0x3a, 0x85, 0xb1, 0x94, 0xc0, 0x34, 0x45,
                                0x44, 0xa2, 0x51, 0x14, 0x48, 0x46, 0x9c, 0x8e, 0xa7, 0xd4, 0xfd,
                                0x9e, 0x4f, 0x95, 0xb0, 0xa7, 0xe4, 0x2f, 0x8f, 0x86, 0x32, 0xd9,
                                0x83, 0xbe, 0x74, 0x1c, 0x91, 0x62, 0xf6, 0x5b, 0x12, 0xd9, 0x0e,
                                0x75, 0xba, 0xcb, 0xe6, 0x08, 0xf4, 0xc6, 0x72, 0x50, 0x2e, 0x71,
                                0x42, 0x91, 0xf0, 0x26, 0x2b, 0x16, 0xde, 0x46, 0x91, 0xff, 0x2d,
                                0x66, 0x09, 0x72, 0xc6, 0x50, 0x82, 0x1f, 0x96, 0x0a, 0xa4, 0xd8,
                                0x22, 0x83, 0xde, 0xa5, 0x51, 0x61, 0xb7, 0x2a, 0x86, 0x1d, 0x37,
                                0x6a, 0xd9, 0xc5, 0x9d, 0x44, 0x1a, 0x1a, 0x8d, 0xf8, 0x72, 0x2e,
                                0xcb, 0xfe, 0x9b, 0xf5, 0x3c, 0xfc, 0x6e, 0x23, 0x17, 0x6b, 0xfe,
                                0x3c, 0x6c, 0x4b, 0x83, 0x71, 0x20, 0x09, 0xc4, 0x49, 0xe8, 0x5f,
                                0x1f, 0x20, 0x17, 0x02, 0xaf, 0xe8, 0x29, 0xd0, 0xd6, 0x20, 0x89,
                                0xad, 0x46, 0x22, 0x45, 0xbd, 0x4c, 0x8e, 0x4a, 0xbe, 0x80, 0xcd,
                                0xe5, 0xc4, 0xe2, 0xc9, 0x64, 0x1e, 0x2e, 0x6c, 0xc5, 0x38, 0x9f,
                                0xc8, 0xc7, 0x93, 0xd1, 0x5c, 0xfb, 0xa3, 0x81, 0x4c, 0x9c, 0xdc,
                                0x49, 0xc3, 0x61, 0xa7, 0x11, 0xfb, 0xcd, 0xf1, 0xd8, 0xac, 0xa4,
                                0x3e, 0x26, 0x47, 0x82, 0x4e, 0x95, 0x2f, 0xea, 0xe5, 0x5e, 0xa8,
                                0x8b, 0xf0, 0x42, 0x93, 0xdc, 0x13, 0xdd, 0x6a, 0x0e, 0x0d, 0x91,
                                0x22, 0xac, 0x96, 0x92, 0xbf, 0x50, 0xcf, 0xb2, 0x5f, 0x1d, 0x8d,
                                0xfb, 0x75, 0x6a, 0x76, 0xd4, 0xa4, 0x65, 0x2f, 0xee, 0x24, 0xd8,
                                0x3f, 0x18, 0x36, 0xe0, 0xcb, 0xd9, 0x0c, 0xfc, 0x7a, 0x29, 0x13,
                                0xef, 0x77, 0x27, 0x60, 0x95, 0xe6, 0xa8, 0x9d, 0xe0, 0x20, 0x1c,
                                0x85, 0x85, 0x12, 0x18, 0x29, 0x3e, 0x51, 0x44, 0x7c, 0x0f, 0xc2,
                                0x61, 0xc4, 0x15, 0x0d, 0x95, 0x96, 0x00, 0xd1, 0x9b, 0x36, 0xb5,
                                0x86, 0x65, 0x73, 0xfc, 0x90, 0xe8, 0xe6, 0x86, 0x06, 0xb1, 0x04,
                                0x67, 0xe3, 0xd9, 0x04, 0x25, 0x17, 0xe7, 0x63, 0xb9, 0x8c, 0x02,
                                0x4f, 0x86, 0xb3, 0xf1, 0xb0, 0x2f, 0x13, 0xa7, 0x3d, 0x26, 0x1c,
                                0xb5, 0xeb, 0xb1, 0x5b, 0xa7, 0xc6, 0x26, 0x99, 0xed, 0x6c, 0xb6,
                                0x04, 0x13, 0x29, 0x01, 0x18, 0x4a, 0xe4, 0x61, 0xcc, 0xe8, 0x8f,
                                0xa9, 0x34, 0x11, 0x56, 0x0a, 0x43, 0x48, 0x2d, 0x72, 0xec, 0x53,
                                0x59, 0x3f, 0xaa, 0xd7, 0xe0, 0xb8, 0x49, 0x83, 0xb3, 0x8e, 0x78,
                                0x3c, 0xbf, 0x13, 0x8f, 0x8f, 0x46, 0x08, 0xcc, 0x74, 0x3a, 0x7e,
                                0xbd, 0x90, 0x86, 0x1d, 0x55, 0x30, 0x5b, 0x17, 0x09, 0xf1, 0x50,
                                0x11, 0xc9, 0xd6, 0x04, 0x7c, 0x76, 0x2c, 0x95, 0xe2, 0x2c, 0x42,
                                0x76, 0xf5, 0x03, 0xe4, 0xff, 0xd8, 0xaa, 0x82, 0xa5, 0xa8, 0x0a,
                                0x0d, 0x83, 0xde, 0xd5, 0xdd, 0x9e, 0xe9, 0xc7, 0x45, 0x75, 0x80,
                                0x08, 0x0b, 0x35, 0x09, 0xa4, 0x94, 0x2c, 0x9c, 0x8f, 0x12, 0x94,
                                0xd1, 0x1c, 0x3c, 0x1d, 0xcf, 0xc7, 0x83, 0x3b, 0xa9, 0x38, 0x6c,
                                0xd5, 0x53, 0xa3, 0xa6, 0xc3, 0x96, 0x45, 0x83, 0xc5, 0x3c, 0x25,
                                0x46, 0x12, 0xa4, 0xb0, 0xa6, 0x84, 0x62, 0x3e, 0x53, 0x6a, 0x1f,
                                0xa2, 0xfd, 0x31, 0x83, 0x14, 0x8b, 0x39, 0x11, 0x58, 0x2f, 0x8e,
                                0x64, 0x7b, 0x54, 0xaa, 0x8f, 0x1a, 0x55, 0x78, 0xd4, 0xae, 0xc5,
                                0xd3, 0xee, 0x58, 0xf6, 0xb2, 0x2f, 0x0e, 0x1f, 0x8f, 0xe8, 0xf1,
                                0xa5, 0x2d, 0x15, 0x5f, 0xd8, 0x92, 0xd8, 0x1a, 0x29, 0x65, 0x27,
                                0x44, 0x82, 0x93, 0x08, 0x19, 0xf6, 0x82, 0x25, 0xd8, 0x09, 0x0c,
                                0xb4, 0x1f, 0x85, 0xcb, 0xae, 0x7e, 0x80, 0xbc, 0xe3, 0x28, 0xdd,
                                0x02, 0x7f, 0x5b, 0x65, 0x48, 0x28, 0xca, 0x82, 0x24, 0x48, 0xf3,
                                0xf6, 0x45, 0x9e, 0xbf, 0x3f, 0x7a, 0x84, 0x41, 0xa8, 0x94, 0x8b,
                                0xd8, 0xd9, 0xb0, 0x09, 0x4f, 0x46, 0x32, 0x2f, 0xe1, 0x9c, 0x8f,
                                0xe5, 0xe3, 0xf1, 0x60, 0x16, 0x46, 0x32, 0xc3, 0x68, 0x0e, 0xd2,
                                0x60, 0x24, 0x8e, 0xcc, 0x57, 0x17, 0xc1, 0x86, 0x62, 0x15, 0xf6,
                                0x71, 0x83, 0x86, 0x4d, 0x26, 0xab, 0xd1, 0x1b, 0x13, 0x8a, 0x81,
                                0x18, 0x29, 0x46, 0xd4, 0x52, 0xfb, 0xa8, 0x2e, 0x18, 0xd3, 0x29,
                                0x12, 0x76, 0xbf, 0x56, 0x89, 0x67, 0xbd, 0x89, 0x78, 0xd9, 0x9b,
                                0x80, 0x0f, 0xfa, 0xe3, 0xf1, 0xc9, 0xb0, 0x9e, 0x7d, 0x61, 0x35,
                                0xe2, 0x59, 0x99, 0x0e, 0x1b, 0x12, 0x09, 0x36, 0x03, 0x45, 0xd8,
                                0x27, 0x6f, 0x71, 0xf4, 0x2d, 0x7b, 0x04, 0xe9, 0x34, 0x42, 0x8e,
                                0x57, 0x72, 0xf9, 0xd5, 0xce, 0x4a, 0x55, 0xe2, 0x20, 0x5b, 0x75,
                                0x80, 0xd0, 0x96, 0xe5, 0xc3, 0x81, 0x45, 0x1a, 0x86, 0x12, 0xaa,
                                0x4a, 0x06, 0x0f, 0x4f, 0x94, 0xf8, 0xf1, 0x90, 0x25, 0xf0, 0xc7,
                                0x72, 0xa5, 0x8a, 0x9a, 0xb2, 0x14, 0x9c, 0x0d, 0x67, 0xe2, 0x82,
                                0xc0, 0x3c, 0x19, 0xca, 0x05, 0x99, 0x30, 0x5b, 0xb3, 0xc4, 0xa2,
                                0x47, 0x27, 0x83, 0xad, 0xbe, 0x18, 0xd3, 0xf5, 0x25, 0xac, 0x55,
                                0x1e, 0x8a, 0x46, 0x59, 0x30, 0x1a, 0xc2, 0xc4, 0x68, 0x89, 0x08,
                                0xc2, 0x78, 0x89, 0x91, 0x8d, 0x67, 0xaa, 0x71, 0xaf, 0x2c, 0x1a,
                                0x8f, 0xdb, 0x75, 0x78, 0xd6, 0x93, 0x80, 0x9f, 0xf5, 0x25, 0xda,
                                0x3f, 0x18, 0x8c, 0xc7, 0x67, 0xe3, 0x09, 0xf8, 0x64, 0x40, 0x8d,
                                0xb5, 0xb0, 0x70, 0x2c, 0x0a, 0xc8, 0x5f, 0x08, 0xca, 0x46, 0x50,
                                0x10, 0x81, 0x09, 0xc4, 0x7d, 0x4a, 0xa5, 0x87, 0x91, 0x0a, 0x1c,
                                0x50, 0x11, 0xb8, 0x12, 0x20, 0x65, 0x01, 0xdf, 0xfd, 0x17, 0xc5,
                                0x5d, 0x69, 0xb8, 0xd1, 0xf1, 0xf4, 0x54, 0xa2, 0x8b, 0x1b, 0xcc,
                                0x21, 0x52, 0x94, 0x90, 0x6a, 0x62, 0x5d, 0x5d, 0x59, 0x39, 0x2f,
                                0x00, 0xa9, 0x1c, 0xaa, 0x38, 0xb2, 0x00, 0x9c, 0xf5, 0xeb, 0xf1,
                                0x68, 0x20, 0x99, 0x9d, 0x51, 0xf3, 0xf7, 0xe4, 0x6e, 0x26, 0xf9,
                                0x0c, 0x55, 0xa7, 0xce, 0x64, 0x6c, 0xd7, 0xea, 0x31, 0xa8, 0x57,
                                0xa2, 0x43, 0xa3, 0x60, 0x77, 0xe2, 0xb5, 0xe8, 0x88, 0x8d, 0x61,
                                0x9d, 0xba, 0x68, 0x74, 0x6a, 0xe5, 0x18, 0x4e, 0x92, 0xb3, 0xed,
                                0x0a, 0x15, 0x4e, 0x1a, 0xc9, 0x5b, 0xda, 0x74, 0xb8, 0xe8, 0xd4,
                                0xb1, 0x57, 0x0e, 0x7f, 0x19, 0xd4, 0xe1, 0xe3, 0x41, 0x15, 0xb6,
                                0xb4, 0x54, 0x85, 0xb4, 0xb1, 0x58, 0xa7, 0xf4, 0xb1, 0xf2, 0x79,
                                0xd8, 0x08, 0x14, 0x63, 0x5f, 0x12, 0x4c, 0xa9, 0x44, 0xf3, 0x9a,
                                0x52, 0xc1, 0x8e, 0xc3, 0x23, 0xae, 0x06, 0x8c, 0x45, 0x2c, 0xb9,
                                0x04, 0x33, 0x14, 0x2a, 0x33, 0x1a, 0xdd, 0x3c, 0xa0, 0x73, 0x76,
                                0x41, 0x51, 0x60, 0x10, 0x4a, 0x83, 0x43, 0x91, 0xe8, 0xe9, 0x89,
                                0x2a, 0x61, 0x20, 0xd2, 0xfd, 0xfc, 0x90, 0x43, 0x77, 0x74, 0xa5,
                                0x5c, 0x89, 0x47, 0xbd, 0x7a, 0xf6, 0xb8, 0x3f, 0x99, 0xa0, 0x18,
                                0xc9, 0x67, 0x92, 0x71, 0xd2, 0x9d, 0x82, 0x83, 0x36, 0x3d, 0x36,
                                0xca, 0x55, 0x18, 0x35, 0x84, 0x60, 0x80, 0xd2, 0x6a, 0x20, 0x3e,
                                0x02, 0x83, 0xf1, 0x61, 0xcc, 0x66, 0x0a, 0xc7, 0x4e, 0x45, 0x34,
                                0x95, 0x68, 0x05, 0x4e, 0x1a, 0xc8, 0x5f, 0x9a, 0x54, 0xec, 0xbc,
                                0x4d, 0x83, 0x57, 0xdd, 0x1a, 0xbc, 0xdf, 0xab, 0xc1, 0x5e, 0xae,
                                0x88, 0x0d, 0x09, 0x03, 0xb0, 0x4b, 0x66, 0xbf, 0x1d, 0x4e, 0x9f,
                                0xa5, 0x38, 0x0c, 0x8b, 0xc0, 0xb1, 0x2c, 0x02, 0x3b, 0x41, 0x81,
                                0x38, 0x53, 0x6b, 0x71, 0x10, 0x16, 0x86, 0xf7, 0x22, 0xae, 0x20,
                                0x9d, 0x4a, 0xb8, 0x82, 0xcb, 0x5f, 0x5a, 0xce, 0xf3, 0xb7, 0x19,
                                0x5c, 0xdd, 0x91, 0x40, 0x61, 0x21, 0xf3, 0x2d, 0xa5, 0xbb, 0xa6,
                                0x73, 0x75, 0x63, 0xb5, 0x22, 0x82, 0x14, 0x12, 0x82, 0x5c, 0xf2,
                                0x9b, 0x4c, 0x01, 0x8f, 0xcd, 0xa4, 0xc8, 0x1c, 0x2d, 0x3d, 0x7b,
                                0xd4, 0x6b, 0xc4, 0x69, 0xb7, 0x91, 0x1a, 0x3d, 0x8a, 0x2e, 0x23,
                                0x0e, 0xda, 0xe3, 0xb0, 0x43, 0x2d, 0xff, 0x6a, 0x71, 0x38, 0x45,
                                0x18, 0x36, 0x68, 0x36, 0xda, 0x21, 0x20, 0xbb, 0xb5, 0x31, 0x70,
                                0x18, 0xef, 0x31, 0x4d, 0xd3, 0x8f, 0x9a, 0x14, 0xb8, 0x68, 0x8b,
                                0xc1, 0x8b, 0x8e, 0x68, 0x76, 0x5c, 0x18, 0x66, 0x9f, 0x26, 0x10,
                                0xc3, 0x04, 0x66, 0x8a, 0x3c, 0x65, 0x83, 0x7e, 0xe7, 0x66, 0x70,
                                0x08, 0x99, 0xaf, 0x1c, 0x17, 0x5a, 0x2d, 0xb6, 0xc5, 0x62, 0x9c,
                                0xc7, 0xc6, 0x32, 0x87, 0x11, 0x9f, 0xcb, 0xe4, 0x57, 0x57, 0x9d,
                                0x1c, 0x4f, 0x7b, 0x1b, 0x48, 0x31, 0x19, 0x3e, 0x7e, 0xa8, 0x26,
                                0xf9, 0xe6, 0x8b, 0x44, 0x94, 0x4a, 0x6e, 0xa8, 0xa5, 0xfc, 0x2f,
                                0xa3, 0x13, 0x2e, 0x21, 0x73, 0xd4, 0x7b, 0x79, 0xa2, 0x8e, 0xcb,
                                0x63, 0x23, 0x59, 0x31, 0xec, 0x94, 0xfa, 0x8e, 0x53, 0x1a, 0x06,
                                0x4f, 0xba, 0x93, 0x2f, 0x9b, 0xbd, 0x43, 0x5a, 0x0f, 0xbb, 0x92,
                                0xb0, 0x4f, 0xaf, 0xed, 0xb7, 0xc7, 0x63, 0x97, 0xba, 0xdb, 0xfd,
                                0x26, 0x1d, 0x55, 0x2d, 0x0d, 0x95, 0x6a, 0xaa, 0x48, 0x75, 0x51,
                                0xec, 0x71, 0xa3, 0x02, 0xe7, 0xcd, 0x34, 0x47, 0xa5, 0x49, 0xd1,
                                0xcd, 0xf3, 0xb3, 0x8f, 0x53, 0x79, 0x9e, 0x0b, 0x0d, 0xb5, 0x0f,
                                0xf8, 0x7a, 0x63, 0x92, 0xc7, 0x25, 0x7f, 0x09, 0xc6, 0x36, 0x29,
                                0xe5, 0x39, 0xa5, 0xd6, 0x83, 0xa8, 0x48, 0x3c, 0x52, 0x46, 0xe3,
                                0x40, 0x1a, 0x8a, 0xe3, 0xd0, 0xf0, 0xab, 0x49, 0x27, 0xf2, 0x11,
                                0x9b, 0xde, 0xc9, 0x19, 0x26, 0x4f, 0x6f, 0xe4, 0x09, 0x02, 0x90,
                                0xcb, 0x13, 0x5c, 0x7a, 0x4c, 0x2e, 0x57, 0x00, 0x8b, 0x2c, 0x1c,
                                0xc5, 0x0e, 0x30, 0xc1, 0xc1, 0x88, 0x73, 0x75, 0x41, 0x6e, 0x80,
                                0x3f, 0xfa, 0x33, 0x62, 0xb0, 0x59, 0xab, 0x63, 0xc7, 0x1d, 0x5a,
                                0x1c, 0xb6, 0x68, 0xa9, 0xc9, 0xa3, 0xb4, 0x68, 0x52, 0x61, 0x87,
                                0xca, 0xf1, 0x6e, 0x4b, 0x2c, 0xb6, 0xa9, 0x81, 0xdb, 0xae, 0x53,
                                0x61, 0xbb, 0x8a, 0x3a, 0xdd, 0x6a, 0x8a, 0x8a, 0x08, 0x1c, 0xd1,
                                0xcc, 0x74, 0x68, 0x96, 0xe0, 0x93, 0x51, 0x02, 0x57, 0x18, 0x89,
                                0x2e, 0x5f, 0x1f, 0xb6, 0x21, 0x8f, 0xbc, 0x4c, 0x1f, 0xf2, 0x16,
                                0xb6, 0xcc, 0xe5, 0x92, 0xcf, 0x84, 0x5c, 0x3e, 0x2d, 0xfe, 0x2c,
                                0x56, 0x83, 0x0b, 0x4a, 0xa3, 0xc7, 0x51, 0x4a, 0x1c, 0x12, 0x98,
                                0x23, 0x8a, 0x8f, 0x14, 0xd1, 0x57, 0x90, 0x4e, 0xfe, 0x22, 0x96,
                                0xe1, 0xe1, 0xcd, 0x1c, 0x0f, 0x3a, 0x9b, 0xbc, 0x7c, 0x2e, 0xc3,
                                0x61, 0xc0, 0xa5, 0xe4, 0x2f, 0x79, 0x42, 0x11, 0x8a, 0x09, 0x52,
                                0x39, 0xe5, 0xba, 0xc1, 0xd3, 0x83, 0x15, 0xf8, 0x72, 0xb0, 0x90,
                                0x17, 0x6f, 0xdf, 0x6d, 0x8a, 0xc7, 0x7a, 0x41, 0x10, 0xee, 0x51,
                                0x09, 0xde, 0xa5, 0x14, 0xda, 0xa9, 0x96, 0x63, 0xc3, 0x1c, 0x86,
                                0x35, 0x73, 0x38, 0x56, 0x4a, 0xa5, 0x58, 0xa6, 0x81, 0x72, 0xbd,
                                0x44, 0x8a, 0x6d, 0x3a, 0xde, 0x29, 0x0d, 0xc1, 0x66, 0x9e, 0x08,
                                0x4b, 0x69, 0xfe, 0xf8, 0x6a, 0x35, 0x9b, 0x9d, 0x94, 0xc6, 0xb0,
                                0x3e, 0xae, 0x1f, 0xf6, 0xe4, 0x34, 0x79, 0x0b, 0xfd, 0x31, 0xee,
                                0xeb, 0xcd, 0x36, 0xc5, 0x22, 0x36, 0x47, 0x5e, 0xb6, 0x4b, 0xca,
                                0xfc, 0x20, 0x35, 0x9d, 0x9a, 0xbb, 0x48, 0xbc, 0xa3, 0x8b, 0x23,
                                0xbf, 0xa1, 0xbe, 0x26, 0x48, 0x72, 0x99, 0x62, 0x3f, 0x2a, 0x94,
                                0x7a, 0x71, 0x88, 0xad, 0x9c, 0x7c, 0xa4, 0x2a, 0x28, 0x04, 0x35,
                                0x94, 0x42, 0xc9, 0xee, 0x9e, 0x54, 0xa6, 0xbd, 0x58, 0x59, 0xa0,
                                0x84, 0x55, 0xd0, 0xdd, 0xcc, 0x12, 0x08, 0xc8, 0x5f, 0x84, 0x68,
                                0x52, 0xa9, 0x90, 0x47, 0x6a, 0x29, 0xa2, 0x8e, 0x78, 0xb1, 0x58,
                                0x4f, 0x83, 0x64, 0x1a, 0xb6, 0xe9, 0x82, 0x97, 0xb3, 0x85, 0x58,
                                0xca, 0x09, 0xbc, 0x9c, 0xac, 0x97, 0xf3, 0x82, 0xb1, 0x9c, 0x1b,
                                0x84, 0x05, 0x1a, 0x03, 0x96, 0xb2, 0x45, 0x58, 0xcc, 0x14, 0x62,
                                0x31, 0x23, 0x00, 0xb3, 0x49, 0x3c, 0x2c, 0xa5, 0xf2, 0x70, 0x58,
                                0x25, 0xc7, 0x6f, 0xb7, 0x72, 0x70, 0x52, 0xa6, 0xc2, 0x00, 0x55,
                                0x20, 0xaa, 0x3a, 0x58, 0x11, 0x0b, 0x61, 0xe3, 0xf8, 0xe2, 0x5c,
                                0xa3, 0xb9, 0xf4, 0x95, 0x53, 0x6a, 0xf0, 0x7e, 0x91, 0x9d, 0xc7,
                                0xee, 0x89, 0xc5, 0xec, 0x71, 0xb4, 0x1a, 0x4f, 0x62, 0x54, 0x8e,
                                0x66, 0x0f, 0x8f, 0xa3, 0xa3, 0xf1, 0x41, 0x94, 0xf2, 0xc7, 0x51,
                                0xcd, 0x7c, 0xac, 0xde, 0x48, 0x55, 0x09, 0xc5, 0x3c, 0x7f, 0x56,
                                0x11, 0x14, 0xcc, 0xea, 0xc3, 0xe5, 0xc8, 0xe4, 0x70, 0xa1, 0xa5,
                                0xca, 0x54, 0x49, 0xa0, 0x6a, 0x95, 0x4a, 0xe8, 0xa9, 0xaf, 0x31,
                                0xfa, 0xf8, 0xa2, 0x55, 0xa3, 0x45, 0x55, 0x58, 0x28, 0xab, 0xf2,
                                0x0f, 0xc0, 0x70, 0xa2, 0xca, 0xfe, 0x68, 0xac, 0x80, 0xfc, 0x23,
                                0x0a, 0xab, 0xf9, 0x81, 0x98, 0x4b, 0xe6, 0x63, 0x22, 0x91, 0x8b,
                                0xd1, 0x78, 0x2e, 0x26, 0xf4, 0x3c, 0xda, 0xe7, 0x63, 0x34, 0xd6,
                                0x0f, 0x63, 0x5a, 0x1f, 0x58, 0x75, 0xbe, 0x04, 0xc6, 0x0f, 0x9b,
                                0xf9, 0x22, 0xbc, 0xdb, 0xaf, 0xc3, 0x6f, 0xb6, 0x73, 0xd8, 0x49,
                                0x71, 0x34, 0x1b, 0x22, 0xc8, 0x67, 0x49, 0x06, 0x9c, 0xaa, 0xd5,
                                0x58, 0x16, 0x0a, 0xd9, 0x8b, 0xf8, 0x04, 0x76, 0x42, 0xea, 0x38,
                                0x24, 0x65, 0x7e, 0x5e, 0x50, 0x44, 0x83, 0xa4, 0x04, 0xfb, 0x94,
                                0xbe, 0xef, 0x9b, 0x32, 0x70, 0x8f, 0xc0, 0x9c, 0xab, 0x69, 0x2a,
                                0x97, 0xc9, 0x7f, 0x9c, 0xff, 0x31, 0x68, 0x95, 0x2b, 0xde, 0x94,
                                0xf0, 0x03, 0x50, 0x22, 0x10, 0xd9, 0xeb, 0xa9, 0x4c, 0xb6, 0xab,
                                0x34, 0xc8, 0xe1, 0xf1, 0xc9, 0x4b, 0xdc, 0x51, 0x19, 0x20, 0x46,
                                0x13, 0x95, 0xd1, 0x04, 0x2f, 0x6f, 0xa6, 0x71, 0x76, 0x61, 0xf5,
                                0x0a, 0x25, 0xab, 0x27, 0x50, 0x66, 0x5f, 0x2e, 0xc6, 0xf2, 0xe3,
                                0xf1, 0x68, 0xba, 0x92, 0x86, 0xc8, 0x78, 0x6c, 0x57, 0x47, 0x60,
                                0x89, 0xe0, 0x4c, 0x26, 0xf9, 0x63, 0x88, 0x26, 0xec, 0x7e, 0x1a,
                                0x24, 0x07, 0x28, 0x06, 0x35, 0xbe, 0x18, 0x4d, 0xe0, 0xc0, 0x96,
                                0x2a, 0x20, 0x45, 0x09, 0x71, 0xbf, 0x22, 0x0c, 0x9f, 0xda, 0xd2,
                                0xec, 0xff, 0xbc, 0x55, 0x60, 0x7f, 0xbf, 0x2f, 0x05, 0xed, 0xca,
                                0x28, 0xdc, 0x23, 0x15, 0x7c, 0x5a, 0x6a, 0x26, 0x35, 0xa8, 0xec,
                                0x8f, 0xa3, 0x69, 0x96, 0x22, 0xa3, 0xdf, 0x10, 0x0a, 0xf1, 0xcb,
                                0xfc, 0x42, 0xdc, 0xa7, 0x41, 0xf2, 0x7e, 0x88, 0x94, 0xfd, 0xb2,
                                0xd4, 0xc2, 0xce, 0x62, 0x54, 0xec, 0x01, 0xfd, 0xfe, 0xf3, 0xb8,
                                0x78, 0xfc, 0x8b, 0x4a, 0xf7, 0xc3, 0x0e, 0x91, 0x7d, 0xd4, 0xb7,
                                0x38, 0x14, 0x52, 0xc0, 0xe1, 0x21, 0x8f, 0x54, 0x52, 0x4e, 0x9d,
                                0x6e, 0x57, 0x5c, 0x02, 0x4a, 0x69, 0xd5, 0x53, 0x3a, 0x59, 0xe8,
                                0x24, 0xbb, 0xf4, 0x06, 0xe4, 0x89, 0xc4, 0x50, 0x38, 0x39, 0xa1,
                                0x36, 0x4a, 0x81, 0x06, 0xaa, 0x12, 0xc9, 0x1e, 0x9e, 0xac, 0xaf,
                                0x34, 0x05, 0x8f, 0xa7, 0xcb, 0xd9, 0xf1, 0xdd, 0x2c, 0xdc, 0x6b,
                                0x8e, 0x65, 0x2b, 0xe5, 0xe1, 0x6c, 0x3a, 0x2b, 0x10, 0x63, 0x49,
                                0xfe, 0x6c, 0x38, 0x41, 0x40, 0x73, 0x12, 0x0f, 0x23, 0x7a, 0xf2,
                                0x8e, 0x64, 0x3e, 0x9b, 0xcd, 0x16, 0xb3, 0x8d, 0xb2, 0x70, 0x3c,
                                0xa4, 0xfe, 0xe5, 0xb3, 0xc5, 0x2c, 0xf6, 0xc5, 0x4a, 0x2e, 0xfb,
                                0x7c, 0x39, 0x9f, 0x99, 0x78, 0x1c, 0xf4, 0xf1, 0xfd, 0xf0, 0x41,
                                0x76, 0x0e, 0x7e, 0x5e, 0x42, 0x70, 0xc8, 0x88, 0x1f, 0x50, 0xff,
                                0xb2, 0x44, 0x29, 0xf6, 0x09, 0xa9, 0xe4, 0x85, 0x56, 0x87, 0x17,
                                0x9a, 0x58, 0xbc, 0x97, 0x68, 0xc0, 0xab, 0xe4, 0x54, 0x3c, 0xd7,
                                0x1b, 0xa9, 0x4a, 0xc5, 0xe0, 0xe0, 0x87, 0xfe, 0xab, 0x38, 0xb3,
                                0x40, 0xf8, 0xa6, 0x36, 0x24, 0x9c, 0xe5, 0xf9, 0xfa, 0x21, 0x83,
                                0xaa, 0x51, 0xa9, 0x50, 0x6c, 0xaf, 0x24, 0xc3, 0x6d, 0x54, 0x44,
                                0x5f, 0x8e, 0x03, 0xd5, 0x64, 0x7e, 0x8e, 0x32, 0xdd, 0x42, 0x29,
                                0x94, 0x42, 0xa9, 0x54, 0x1d, 0x19, 0xc9, 0xa8, 0xbf, 0x61, 0x85,
                                0x61, 0x72, 0x34, 0x16, 0x50, 0x73, 0x37, 0x5d, 0x81, 0x83, 0x91,
                                0x62, 0xb6, 0xd7, 0x95, 0x82, 0x8d, 0x1a, 0x35, 0xe6, 0x0a, 0xc3,
                                0x31, 0x91, 0x11, 0x88, 0xd1, 0x64, 0x7f, 0x36, 0x92, 0x2c, 0xc4,
                                0x48, 0xaa, 0x10, 0xd6, 0x74, 0x31, 0x5b, 0x2c, 0x08, 0x23, 0x73,
                                0x56, 0xe1, 0xa2, 0x3f, 0x11, 0x9f, 0xce, 0xe5, 0xe0, 0x17, 0xf3,
                                0xb9, 0xec, 0x17, 0x4b, 0xf9, 0xc8, 0x52, 0x29, 0x50, 0xce, 0xf3,
                                0x63, 0x4f, 0x54, 0x6a, 0x7c, 0x59, 0xdb, 0x84, 0x4f, 0x33, 0xb2,
                                0xec, 0xcf, 0xc9, 0x67, 0x76, 0x24, 0x41, 0xb8, 0x88, 0xd1, 0xe0,
                                0x83, 0x14, 0x13, 0x3e, 0x36, 0xd1, 0x04, 0x4f, 0x37, 0x68, 0x9f,
                                0x7a, 0x99, 0x0f, 0x8b, 0xcc, 0x8c, 0x52, 0x8b, 0x6d, 0x8a, 0x7e,
                                0xe0, 0xef, 0x7f, 0xcd, 0xfe, 0x62, 0xd4, 0x84, 0x84, 0x93, 0x5a,
                                0x78, 0x48, 0xf7, 0xf0, 0x46, 0x1a, 0x55, 0xa2, 0x5c, 0x9a, 0x8b,
                                0x2c, 0x21, 0x61, 0xe8, 0xd4, 0x1b, 0x58, 0x9e, 0x50, 0xec, 0xf0,
                                0x1a, 0xe6, 0x50, 0x0a, 0x05, 0xab, 0xa0, 0xbb, 0x99, 0x41, 0xa5,
                                0x3c, 0x35, 0x2c, 0x0a, 0x03, 0x2d, 0xd5, 0x38, 0xb1, 0x96, 0xe3,
                                0x60, 0xdc, 0x8c, 0x9d, 0xde, 0x2c, 0xb6, 0xd1, 0x94, 0xe8, 0x78,
                                0xf8, 0x90, 0x4d, 0x17, 0xca, 0x30, 0x99, 0x15, 0x0c, 0x6b, 0x4e,
                                0x28, 0xa6, 0xf2, 0xc2, 0x30, 0x5d, 0x20, 0xc3, 0x92, 0x45, 0x79,
                                0xf9, 0x5c, 0xef, 0xf9, 0x70, 0x0a, 0xde, 0xb5, 0x66, 0xb0, 0x07,
                                0x34, 0x7c, 0x66, 0xa9, 0x95, 0x2c, 0x26, 0x40, 0x80, 0x63, 0xfa,
                                0xd9, 0xdb, 0x34, 0x1b, 0xfd, 0xbc, 0xac, 0x12, 0x1f, 0x66, 0xe5,
                                0xe0, 0x23, 0x52, 0xca, 0x53, 0x6d, 0x1c, 0x4e, 0xa4, 0xe1, 0xec,
                                0x9c, 0xde, 0xfb, 0xbc, 0xbc, 0x86, 0x1d, 0x91, 0xd7, 0xec, 0x04,
                                0x08, 0xd9, 0xc7, 0x85, 0x66, 0xec, 0xd2, 0x67, 0xd7, 0xa9, 0x21,
                                0x7c, 0xf8, 0x43, 0xfe, 0x35, 0xae, 0x85, 0x9a, 0xa9, 0x06, 0x59,
                                0x14, 0x72, 0x7d, 0xb8, 0x30, 0x39, 0xfe, 0x16, 0xc9, 0xd3, 0x9b,
                                0x39, 0x9a, 0xbc, 0x6c, 0x4a, 0xab, 0x8e, 0x38, 0x3d, 0x0a, 0xc5,
                                0x41, 0x4c, 0x7d, 0xcb, 0xd9, 0xb1, 0xa2, 0x37, 0xd5, 0x84, 0x5c,
                                0x02, 0x95, 0xe8, 0xe5, 0x0d, 0x13, 0x5f, 0x80, 0xb6, 0x42, 0x13,
                                0xee, 0x8f, 0x95, 0x50, 0x98, 0xed, 0xf7, 0x06, 0xf2, 0xb1, 0xd2,
                                0x6a, 0x64, 0x0b, 0xd5, 0xb1, 0x6c, 0xb6, 0x3c, 0x1a, 0xb6, 0xe2,
                                0x48, 0x58, 0x8b, 0x22, 0x2f, 0x57, 0x5b, 0x69, 0xd4, 0xe5, 0x53,
                                0x54, 0x7b, 0x1d, 0x7a, 0x3c, 0x1c, 0xa0, 0x99, 0xaa, 0x3d, 0x09,
                                0x09, 0xa1, 0x41, 0x88, 0xe4, 0x73, 0xd1, 0x9e, 0x99, 0x89, 0x85,
                                0xa4, 0x3c, 0xac, 0x06, 0x08, 0xf1, 0x5e, 0xb1, 0x19, 0x4f, 0x34,
                                0x5a, 0xf6, 0xb3, 0xa4, 0x14, 0x3c, 0xa5, 0xd4, 0x39, 0x0e, 0x95,
                                0xe1, 0x9e, 0x48, 0xc4, 0x3e, 0xaf, 0xa8, 0xc3, 0x73, 0x8d, 0x0e,
                                0xc7, 0xd4, 0xc7, 0xbc, 0x9f, 0x99, 0x47, 0xcd, 0x1e, 0xb5, 0x03,
                                0xfe, 0x02, 0x1c, 0x52, 0x8f, 0xf3, 0x83, 0x81, 0x29, 0x16, 0x88,
                                0xd0, 0x14, 0xa9, 0x44, 0x21, 0xd7, 0x1f, 0xf9, 0x3c, 0x7f, 0x64,
                                0x91, 0x72, 0x52, 0x3d, 0xbc, 0x90, 0xed, 0xc7, 0x47, 0x5d, 0x84,
                                0x02, 0x8d, 0x6a, 0x1d, 0x12, 0xc9, 0x6b, 0xca, 0xe8, 0x64, 0xda,
                                0xe3, 0x13, 0x51, 0x42, 0xab, 0xd6, 0xcd, 0x1d, 0xfa, 0xb8, 0x3c,
                                0xec, 0xd9, 0x1a, 0x30, 0xd5, 0x96, 0x8f, 0x96, 0xe2, 0x54, 0xd4,
                                0xe7, 0x19, 0xb0, 0xd2, 0x9e, 0x8a, 0xb9, 0x1a, 0x1d, 0x9b, 0xa6,
                                0x79, 0xc9, 0x56, 0xaa, 0x80, 0xb5, 0x38, 0x0a, 0x93, 0x25, 0x34,
                                0x54, 0x66, 0x47, 0xa1, 0x2a, 0x55, 0x81, 0x96, 0x2c, 0x15, 0x8a,
                                0xf4, 0x31, 0x88, 0x0c, 0xe0, 0x23, 0x82, 0x3c, 0x64, 0xa5, 0xc5,
                                0x88, 0x97, 0xb3, 0x45, 0x28, 0xef, 0x5e, 0x40, 0x7e, 0xf9, 0x20,
                                0xe6, 0x53, 0x73, 0x71, 0x4e, 0x40, 0x5e, 0x26, 0x99, 0xf0, 0x30,
                                0xde, 0x80, 0xa3, 0x88, 0x28, 0xaa, 0x4e, 0x32, 0xbc, 0x97, 0x9e,
                                0x83, 0x97, 0xc6, 0x14, 0xbc, 0xa0, 0xf7, 0xde, 0x49, 0x4e, 0xc3,
                                0x2e, 0xf9, 0xdd, 0x31, 0x95, 0xf0, 0x83, 0x18, 0xf5, 0x0f, 0x07,
                                0xc6, 0xd1, 0xcc, 0x59, 0xa8, 0x24, 0x97, 0x89, 0x83, 0xa9, 0x0c,
                                0xcb, 0x51, 0x1e, 0x1c, 0xc6, 0x72, 0xfc, 0x04, 0x04, 0x88, 0xcf,
                                0x72, 0x48, 0x45, 0xad, 0xba, 0x04, 0x94, 0x49, 0xa4, 0xac, 0x9a,
                                0x46, 0xff, 0x02, 0x65, 0x02, 0x0a, 0x32, 0x6b, 0x20, 0x2a, 0x98,
                                0xc3, 0xd8, 0x60, 0x2b, 0x46, 0xda, 0x4a, 0xc1, 0xf7, 0xf0, 0x80,
                                0x88, 0xfc, 0x29, 0x84, 0x27, 0x60, 0xe1, 0x42, 0x31, 0x93, 0x89,
                                0x02, 0x21, 0x13, 0x4b, 0x98, 0x21, 0x22, 0x18, 0xa1, 0xa4, 0x82,
                                0x50, 0x7f, 0x7f, 0xbb, 0x94, 0xcf, 0x47, 0x20, 0xc7, 0x07, 0xfe,
                                0x1e, 0x6e, 0x08, 0xa0, 0x48, 0x91, 0x8b, 0xb0, 0xd2, 0x61, 0xc2,
                                0xf9, 0x44, 0x0e, 0x2e, 0xa6, 0x8b, 0x70, 0x6f, 0xb2, 0x0e, 0xfa,
                                0x86, 0x79, 0x14, 0xf6, 0x6d, 0x62, 0x2e, 0xd3, 0xcc, 0x3e, 0xac,
                                0x6a, 0xc2, 0x61, 0xb4, 0x9a, 0x9d, 0x2a, 0xa8, 0x7f, 0xd1, 0x52,
                                0xfa, 0xe9, 0xf4, 0xec, 0x84, 0x6e, 0xde, 0xab, 0xac, 0x7c, 0x3c,
                                0x20, 0xe3, 0x3d, 0x8e, 0x8a, 0xc6, 0x99, 0xd1, 0x84, 0x65, 0xfa,
                                0x5d, 0x3f, 0x18, 0x98, 0x12, 0xff, 0xa0, 0xd7, 0x05, 0xa4, 0x94,
                                0xba, 0x08, 0x25, 0x72, 0x09, 0x46, 0x91, 0x48, 0x82, 0x3a, 0x3a,
                                0x89, 0x3c, 0x52, 0x50, 0x11, 0x75, 0xbc, 0x25, 0x04, 0xcd, 0x90,
                                0x54, 0x03, 0x45, 0x66, 0x1f, 0xe4, 0x65, 0x0b, 0x08, 0x2a, 0x59,
                                0x42, 0x77, 0x4f, 0x2b, 0x5b, 0xb7, 0xd6, 0x61, 0x7b, 0xa2, 0x06,
                                0xbe, 0xa4, 0x1e, 0x3f, 0x77, 0x0f, 0x3b, 0xc7, 0xd5, 0x03, 0x51,
                                0xc1, 0x91, 0xc8, 0x4e, 0xce, 0xb5, 0x07, 0x72, 0x04, 0x08, 0xf2,
                                0x0b, 0x80, 0x41, 0xa5, 0x87, 0x56, 0xa6, 0x01, 0xc7, 0xc5, 0x95,
                                0xc2, 0x05, 0xbe, 0x2e, 0x4e, 0x2c, 0x56, 0xca, 0x67, 0x8f, 0x47,
                                0xc9, 0x43, 0xac, 0x39, 0x78, 0x6c, 0xcd, 0xc3, 0xd9, 0x4c, 0x31,
                                0xea, 0x3a, 0x3a, 0xa1, 0x69, 0x5d, 0x47, 0xd6, 0x9d, 0x6d, 0x16,
                                0xda, 0xb6, 0x87, 0x9c, 0xf6, 0x0d, 0x34, 0x14, 0x75, 0xa0, 0xa5,
                                0xbc, 0x17, 0x5d, 0x35, 0xc3, 0x38, 0x51, 0x6a, 0xb1, 0x15, 0x18,
                                0x8a, 0x57, 0x05, 0x66, 0x1c, 0x92, 0x8a, 0x36, 0xa9, 0xd7, 0x7a,
                                0xa4, 0x4f, 0xc1, 0x21, 0xa5, 0xd7, 0x0f, 0x06, 0xa6, 0x47, 0x93,
                                0x6f, 0x2c, 0xa2, 0x1e, 0xa6, 0x92, 0x2a, 0x53, 0x89, 0x50, 0x82,
                                0x6c, 0x02, 0x92, 0x68, 0xac, 0x86, 0x5a, 0x53, 0x02, 0x5e, 0xde,
                                0x02, 0xc5, 0x3c, 0x04, 0xb4, 0x72, 0x33, 0x6d, 0x88, 0x2e, 0xb5,
                                0x21, 0xb1, 0x7c, 0x04, 0x4b, 0xa3, 0xb5, 0x58, 0x1e, 0xa9, 0xc0,
                                0xfa, 0x88, 0x05, 0xeb, 0xfd, 0xf9, 0xe8, 0x29, 0x33, 0xb2, 0x22,
                                0x83, 0x12, 0xcd, 0xe6, 0x41, 0x4c, 0xf4, 0xce, 0xa2, 0xb7, 0xf1,
                                0x2e, 0xfa, 0x9a, 0x47, 0x30, 0xd8, 0x3e, 0xc6, 0xca, 0xb2, 0x9a,
                                0x50, 0x18, 0x1f, 0x8e, 0x8e, 0x5c, 0x25, 0x56, 0x9a, 0xe2, 0xb0,
                                0xd7, 0x63, 0xc0, 0x93, 0x89, 0x6c, 0x3c, 0xb1, 0xe5, 0xb0, 0xb3,
                                0xd9, 0x02, 0x5c, 0x2c, 0x9a, 0xd1, 0x36, 0x36, 0x84, 0xa2, 0x89,
                                0x43, 0x96, 0x38, 0xf2, 0x00, 0xe1, 0xfd, 0x8f, 0xa0, 0x18, 0x7d,
                                0x0e, 0xc5, 0xf8, 0x0b, 0x28, 0x26, 0x5f, 0x22, 0x6a, 0xe2, 0x1d,
                                0x28, 0x29, 0xa2, 0xc6, 0x5e, 0x5c, 0xbe, 0x96, 0xd1, 0x42, 0x37,
                                0x46, 0x99, 0x88, 0x4d, 0xaa, 0x96, 0x27, 0xc9, 0xa6, 0x1f, 0xb8,
                                0x32, 0x89, 0xa3, 0x6c, 0x5a, 0x75, 0x31, 0xa4, 0xfa, 0x76, 0xc6,
                                0xcd, 0x9e, 0x03, 0x2f, 0x97, 0x40, 0x64, 0x2f, 0xc0, 0x2f, 0x87,
                                0xc0, 0xe4, 0x2c, 0x52, 0x2c, 0x40, 0x90, 0x65, 0x63, 0xba, 0xd2,
                                0x49, 0xe4, 0x57, 0xb6, 0x62, 0xb6, 0xbf, 0x14, 0x0b, 0xfd, 0x25,
                                0x58, 0x19, 0x28, 0xc6, 0x4a, 0x4f, 0x36, 0x16, 0x3b, 0xd2, 0x31,
                                0xd7, 0x94, 0x8c, 0xfe, 0xea, 0x1a, 0x4c, 0xb6, 0x2e, 0x92, 0xef,
                                0x2c, 0x60, 0xb8, 0xc9, 0xc6, 0xea, 0x8b, 0x06, 0x60, 0xad, 0x8a,
                                0xc5, 0x54, 0xa5, 0x06, 0xb3, 0xd5, 0x5a, 0xac, 0xb7, 0x26, 0xd8,
                                0xf7, 0x7b, 0x93, 0xf0, 0x74, 0x2a, 0x17, 0x2f, 0x16, 0x0a, 0xf0,
                                0x62, 0xa9, 0x10, 0x2f, 0x56, 0x4b, 0x98, 0xae, 0x77, 0x1f, 0xfd,
                                0xf3, 0x47, 0x50, 0x0f, 0x3c, 0x64, 0x11, 0x43, 0x17, 0x04, 0x80,
                                0x80, 0x8c, 0x39, 0x60, 0xbc, 0x84, 0x62, 0xec, 0xd5, 0xe5, 0x1a,
                                0x39, 0xfc, 0x82, 0x45, 0x8e, 0xbc, 0x80, 0xf4, 0xce, 0x23, 0xa8,
                                0xa7, 0x5e, 0xa2, 0x68, 0x70, 0x0f, 0xf7, 0xe3, 0x8d, 0x3f, 0x2c,
                                0x18, 0x7e, 0xee, 0xd2, 0x1b, 0x5f, 0x93, 0x15, 0x7e, 0x04, 0xc5,
                                0x2f, 0x6b, 0x01, 0x9c, 0xac, 0x05, 0x02, 0xb4, 0x44, 0xc7, 0x4b,
                                0x8c, 0x97, 0xb3, 0x0c, 0xae, 0x23, 0x32, 0x66, 0x58, 0x60, 0xee,
                                0x0c, 0xcb, 0x36, 0x37, 0xc1, 0xda, 0x99, 0x87, 0x99, 0x9e, 0x7c,
                                0x2c, 0xf6, 0xe4, 0x61, 0xae, 0x3d, 0x93, 0xcd, 0xb6, 0xa4, 0xc0,
                                0x56, 0xaf, 0x87, 0xb5, 0x2e, 0x81, 0x75, 0x98, 0xdb, 0x30, 0xd4,
                                0x32, 0x83, 0x3b, 0xe5, 0xad, 0xe8, 0x2d, 0x4e, 0xc2, 0x44, 0xa5,
                                0x16, 0x13, 0x16, 0x35, 0x9b, 0xa9, 0x89, 0x65, 0xab, 0xcd, 0x71,
                                0xd8, 0xef, 0x4f, 0xc6, 0xb9, 0x2d, 0x17, 0xef, 0x2c, 0x16, 0xe0,
                                0x9d, 0x95, 0x62, 0xd6, 0x36, 0x3c, 0x08, 0xd5, 0xe0, 0x29, 0x62,
                                0xfa, 0x49, 0x2d, 0x7d, 0xe7, 0x70, 0x5c, 0x7c, 0xd4, 0xe8, 0x4b,
                                0x16, 0x35, 0xea, 0x00, 0xf2, 0xea, 0x72, 0x8d, 0x1c, 0x7e, 0x09,
                                0xd9, 0xe0, 0x33, 0x16, 0xda, 0x77, 0xce, 0x24, 0xed, 0x27, 0x04,
                                0xeb, 0x05, 0xd4, 0xd3, 0xef, 0x42, 0x37, 0xff, 0x2e, 0xea, 0x7e,
                                0xc9, 0xfe, 0xf6, 0x1d, 0xb0, 0x72, 0xe4, 0xcf, 0x46, 0x41, 0xe1,
                                0x2a, 0x7c, 0xd2, 0xa6, 0x99, 0x4f, 0xda, 0x2c, 0x29, 0x64, 0xd9,
                                0xce, 0xcd, 0x5e, 0x26, 0xc5, 0xac, 0x52, 0xac, 0x81, 0x9f, 0xb7,
                                0x61, 0xe7, 0xe5, 0xac, 0x12, 0x98, 0x15, 0x08, 0xb3, 0x66, 0x99,
                                0xb6, 0x64, 0x0a, 0x19, 0x05, 0xb5, 0x6c, 0xa2, 0x2d, 0x9b, 0x54,
                                0x91, 0x85, 0xb9, 0x8e, 0x6c, 0xfb, 0x5c, 0x5b, 0xa6, 0x7d, 0xba,
                                0x21, 0x09, 0x53, 0xb5, 0x89, 0x97, 0x61, 0x23, 0x85, 0x74, 0x50,
                                0x2b, 0x3f, 0x59, 0x16, 0x0d, 0xab, 0x45, 0x8d, 0xc9, 0x0a, 0x2d,
                                0xad, 0xa4, 0x98, 0x5a, 0xea, 0x8c, 0x9b, 0xe3, 0xb1, 0xd3, 0x63,
                                0x60, 0x0f, 0xc6, 0xd2, 0x71, 0x3e, 0x9d, 0x83, 0x67, 0x4b, 0x05,
                                0x88, 0xac, 0x5b, 0x45, 0xed, 0xd8, 0x16, 0x8b, 0xe8, 0x38, 0x86,
                                0xac, 0xef, 0xc2, 0x2e, 0x1b, 0x78, 0x46, 0x10, 0x5e, 0x40, 0xd6,
                                0xff, 0x1c, 0xe1, 0x03, 0xef, 0xd8, 0x43, 0x7a, 0x9e, 0x41, 0xda,
                                0xfd, 0x14, 0x92, 0x8e, 0x33, 0x26, 0x6e, 0x3c, 0x82, 0xa8, 0xf1,
                                0x88, 0x85, 0x0f, 0x52, 0xaa, 0x91, 0x8a, 0xb4, 0xb3, 0xef, 0xdb,
                                0x13, 0x57, 0x3e, 0xb4, 0xa7, 0x6c, 0x7f, 0xf6, 0xa6, 0xfa, 0xf5,
                                0x7f, 0xfb, 0xdb, 0x00, 0x8a, 0x18, 0xf9, 0x8b, 0x31, 0xa0, 0x74,
                                0x0b, 0xbc, 0xfc, 0x75, 0x78, 0x1a, 0xad, 0xf0, 0x4d, 0x5f, 0x84,
                                0x6f, 0xe6, 0x0a, 0xa9, 0x65, 0x8d, 0x54, 0xb3, 0x06, 0x4e, 0xe6,
                                0xea, 0xe5, 0xfe, 0xe5, 0x9a, 0xb1, 0xc4, 0xc4, 0x99, 0x73, 0x90,
                                0xe7, 0x58, 0x91, 0x5e, 0xd0, 0x80, 0xc9, 0xe6, 0x2c, 0x58, 0x9b,
                                0xd2, 0x30, 0xdd, 0x6c, 0xc2, 0x74, 0x13, 0x45, 0x3d, 0x81, 0xa9,
                                0x49, 0x80, 0xb5, 0x3a, 0x9e, 0x4d, 0x13, 0x18, 0x6b, 0x79, 0x0c,
                                0x26, 0xcb, 0xa3, 0xd9, 0xb8, 0x59, 0x85, 0x89, 0x72, 0x35, 0xac,
                                0x65, 0xa4, 0x98, 0xea, 0xef, 0xc0, 0x6c, 0xb4, 0x26, 0x60, 0xaf,
                                0x37, 0x19, 0x87, 0x77, 0x4d, 0xac, 0xaa, 0xa9, 0x15, 0x71, 0x4d,
                                0x6b, 0x30, 0xb4, 0xac, 0x42, 0x54, 0x7b, 0x80, 0xa0, 0xd6, 0x87,
                                0xff, 0x16, 0x8f, 0x10, 0xd8, 0x4c, 0xd1, 0xf8, 0x10, 0xa2, 0xfa,
                                0x07, 0x10, 0xd5, 0x9d, 0x32, 0x51, 0xfd, 0x29, 0xb8, 0xc5, 0x1b,
                                0x10, 0xd3, 0x6b, 0x21, 0x9d, 0x4f, 0x11, 0xd6, 0xf7, 0x0c, 0xca,
                                0x49, 0x52, 0xcd, 0xc2, 0x07, 0x30, 0xac, 0x7d, 0x84, 0x94, 0xcd,
                                0x0f, 0x91, 0x76, 0xf2, 0x9b, 0xff, 0xb7, 0x86, 0x2f, 0xa4, 0xed,
                                0xa5, 0x4d, 0x54, 0xb1, 0xc7, 0xfc, 0x4b, 0xee, 0x91, 0x4a, 0x36,
                                0x09, 0xcc, 0x2c, 0x7c, 0x33, 0xd6, 0xe1, 0x9b, 0xb5, 0x41, 0x70,
                                0x36, 0xbe, 0xdb, 0xcf, 0x20, 0x28, 0x14, 0x3e, 0x69, 0xcb, 0x97,
                                0xc1, 0x49, 0x9d, 0x63, 0xc1, 0x39, 0xf3, 0x48, 0xcd, 0xae, 0x64,
                                0xd6, 0x96, 0x4c, 0x58, 0x5b, 0x32, 0xd8, 0x4c, 0x73, 0xaa, 0xdd,
                                0xe6, 0x50, 0x4b, 0x9d, 0x81, 0xbc, 0x24, 0x1e, 0x53, 0xd5, 0x09,
                                0x97, 0x7e, 0x32, 0x65, 0x51, 0x5d, 0xaa, 0x85, 0xc0, 0xb0, 0x31,
                                0x8a, 0xc9, 0x32, 0x15, 0x9b, 0xad, 0xd1, 0xc2, 0xf1, 0x97, 0x2a,
                                0x5b, 0x1d, 0x89, 0xd8, 0xed, 0x4d, 0xc1, 0x6e, 0xbf, 0x89, 0x09,
                                0xf3, 0x67, 0x11, 0x52, 0xbe, 0x0a, 0x7e, 0xf1, 0x3a, 0x02, 0x2c,
                                0xbb, 0x10, 0x56, 0x1e, 0xd0, 0x7a, 0x00, 0x41, 0xd9, 0x7d, 0x08,
                                0xca, 0xbf, 0x0b, 0x5e, 0xc9, 0x1e, 0xf8, 0xa5, 0xfb, 0xf0, 0x2b,
                                0xd8, 0x61, 0x5e, 0xa9, 0x73, 0xe0, 0x9b, 0xf7, 0x98, 0xb8, 0xee,
                                0x01, 0x82, 0xda, 0xce, 0xc8, 0x73, 0x5e, 0xd9, 0x35, 0xb3, 0xef,
                                0x23, 0x61, 0xf9, 0x23, 0xe8, 0x57, 0x3f, 0xa0, 0x78, 0x0f, 0xc6,
                                0x83, 0xaf, 0xfe, 0xef, 0xe0, 0x84, 0x34, 0x3e, 0x7c, 0x23, 0xa9,
                                0x3b, 0x46, 0x40, 0xf9, 0x7d, 0xc6, 0x2d, 0xd8, 0x85, 0x4f, 0xc6,
                                0x06, 0x3c, 0x0c, 0x73, 0xf0, 0x4e, 0xdf, 0x64, 0x3e, 0x19, 0x5b,
                                0xf0, 0x49, 0xdf, 0x84, 0x97, 0x69, 0x03, 0x5e, 0x29, 0x6b, 0xcc,
                                0x3b, 0x75, 0x15, 0xde, 0x29, 0x2b, 0xf0, 0x4e, 0x5d, 0x66, 0x82,
                                0x94, 0x19, 0xe8, 0xf2, 0x27, 0x90, 0x9e, 0x5f, 0x0b, 0x6b, 0x7b,
                                0x36, 0x6c, 0x1d, 0x59, 0x98, 0xa1, 0x98, 0x6e, 0x49, 0xc7, 0x74,
                                0x63, 0x32, 0xa5, 0x91, 0x03, 0x4e, 0x1c, 0xb3, 0x56, 0xa8, 0xd9,
                                0x24, 0x81, 0x99, 0xbc, 0x4c, 0xa3, 0x38, 0xfb, 0xa4, 0x45, 0x8b,
                                0xe9, 0xea, 0x58, 0x2c, 0x36, 0x1b, 0xb0, 0xe1, 0x78, 0x00, 0x60,
                                0x20, 0x15, 0xbb, 0x83, 0x19, 0x28, 0xb2, 0xd4, 0xb0, 0xd8, 0xf2,
                                0x59, 0xe8, 0x2b, 0x67, 0xc0, 0xcd, 0x5f, 0x03, 0xaf, 0x68, 0x93,
                                0x71, 0x0b, 0xb7, 0xe1, 0x97, 0xb7, 0x0d, 0x4e, 0x2e, 0x45, 0xce,
                                0x0e, 0xf3, 0xcb, 0xd9, 0xa1, 0x9b, 0xb5, 0xed, 0x38, 0x47, 0xe6,
                                0x69, 0x9c, 0x87, 0x5b, 0xfc, 0x24, 0xa9, 0x78, 0x13, 0xbc, 0xe2,
                                0x7d, 0x08, 0x6b, 0x1f, 0x20, 0xec, 0x0e, 0x55, 0x2a, 0xf2, 0xa0,
                                0x98, 0xa9, 0xf7, 0x10, 0x3d, 0xfd, 0x33, 0xc4, 0xcc, 0xbc, 0x64,
                                0x9a, 0xb9, 0x77, 0xfe, 0xcf, 0xbf, 0x92, 0x90, 0x10, 0x94, 0xe0,
                                0xc6, 0x53, 0x04, 0xd1, 0x0f, 0x0d, 0x28, 0x3f, 0x86, 0x5f, 0xfe,
                                0x3e, 0x3c, 0x53, 0xd7, 0xe1, 0x9e, 0x30, 0x0f, 0xaf, 0xb4, 0x6d,
                                0xe6, 0x65, 0xda, 0x26, 0x20, 0x5b, 0xf0, 0x4c, 0xd9, 0x84, 0xb7,
                                0xe9, 0x3b, 0x40, 0xbe, 0xe9, 0x1b, 0xa4, 0x98, 0x35, 0xc6, 0x37,
                                0xcd, 0x43, 0x5b, 0x68, 0x43, 0x1a, 0x81, 0x99, 0x6c, 0xcb, 0x24,
                                0x8f, 0xc9, 0x84, 0xad, 0x2d, 0x03, 0x33, 0xb4, 0x92, 0x72, 0x60,
                                0xad, 0x37, 0x60, 0xb2, 0xfa, 0x12, 0x0c, 0x46, 0xcd, 0x94, 0x46,
                                0x65, 0x2a, 0x8c, 0x5b, 0x62, 0x1d, 0xaf, 0x61, 0xa6, 0x21, 0x11,
                                0x4b, 0xad, 0xc9, 0x58, 0xed, 0x4a, 0xc2, 0xc6, 0x9d, 0x64, 0x6c,
                                0xf6, 0x99, 0xa0, 0xc9, 0xef, 0x46, 0x4e, 0xcd, 0x34, 0x02, 0xf3,
                                0xc9, 0xf0, 0xf3, 0xc8, 0xcf, 0x8a, 0x77, 0x18, 0xaf, 0x78, 0x87,
                                0x00, 0xed, 0x82, 0x5f, 0x70, 0x00, 0x7e, 0xe1, 0x21, 0x38, 0x79,
                                0xbb, 0xa4, 0xdc, 0x1d, 0x78, 0x26, 0xad, 0x30, 0x57, 0xd5, 0x10,
                                0xdc, 0xe3, 0x6d, 0xf0, 0x30, 0x2e, 0x12, 0xa8, 0x4d, 0x08, 0x4a,
                                0x8f, 0x10, 0xd8, 0x70, 0x46, 0x69, 0x75, 0x81, 0x30, 0xf2, 0x23,
                                0xd9, 0xf0, 0x0b, 0xc8, 0x27, 0xde, 0x61, 0x4a, 0xdb, 0x4b, 0xa8,
                                0xd6, 0xbf, 0xf8, 0xdf, 0x57, 0x8d, 0x6c, 0xe2, 0xbf, 0x1a, 0x03,
                                0x1b, 0x4e, 0x21, 0xae, 0x3d, 0x65, 0xc2, 0xea, 0x07, 0x10, 0x98,
                                0x4f, 0xe9, 0xce, 0xdc, 0xb7, 0x7b, 0x18, 0x09, 0x8c, 0x7e, 0x15,
                                0x1e, 0xa9, 0x74, 0x02, 0xa9, 0xf7, 0x08, 0x06, 0x45, 0x1a, 0x29,
                                0x29, 0x73, 0x97, 0xf9, 0x66, 0xef, 0x81, 0x93, 0x7d, 0x8f, 0x4e,
                                0x64, 0x1d, 0xde, 0xc9, 0x8b, 0x08, 0xa1, 0x9e, 0xc6, 0x94, 0x5b,
                                0x8d, 0xb1, 0x86, 0x34, 0x8a, 0x54, 0x4c, 0xd4, 0xa7, 0x10, 0x90,
                                0x64, 0x8c, 0xd7, 0xc4, 0xb3, 0x31, 0x52, 0xcb, 0x58, 0x65, 0x2c,
                                0x46, 0x09, 0xc8, 0x28, 0x79, 0xcb, 0xb0, 0x39, 0x86, 0x8d, 0x91,
                                0xe9, 0x4e, 0x90, 0x7a, 0xa6, 0xab, 0x75, 0x98, 0x6b, 0xd0, 0x63,
                                0xde, 0x31, 0x64, 0xb6, 0x24, 0xb0, 0xc5, 0x76, 0x3d, 0xf8, 0x39,
                                0xb3, 0x08, 0x37, 0xaf, 0xd8, 0xb9, 0x39, 0x4b, 0x04, 0x61, 0x1b,
                                0xfe, 0x94, 0x3e, 0x42, 0x0b, 0x29, 0xd9, 0x7c, 0x74, 0x09, 0x86,
                                0x6e, 0x1a, 0x29, 0x98, 0xd4, 0x92, 0xba, 0x41, 0xa9, 0xbe, 0x02,
                                0x17, 0xe5, 0x00, 0xdc, 0xe2, 0xa6, 0xe9, 0x26, 0xce, 0xc1, 0xd3,
                                0x40, 0xa9, 0x9d, 0xbd, 0x4b, 0x70, 0x8e, 0x21, 0xac, 0x7a, 0x00,
                                0x61, 0xfd, 0x29, 0x93, 0x74, 0x3d, 0x61, 0xa1, 0x43, 0x04, 0x68,
                                0xec, 0x39, 0xa2, 0xe7, 0x3f, 0xfc, 0xab, 0xff, 0x9b, 0xf0, 0xdf,
                                0x01, 0x7e, 0xde, 0x81, 0xa0, 0x06, 0x75, 0xe8, 0xb1, 0x00, 0x00,
                                0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
                            ],
                        },
                    })?);

                    let mut character_packets = self.lock_enforcer().read_characters(|characters_table_read_handle| {
                        let possible_index = characters_table_read_handle.index(player_guid(sender));
                        let character_guids = possible_index.map(|(instance_guid, chunk, _)| Zone::diff_character_guids(
                            instance_guid,
                            Character::MIN_CHUNK,
                            chunk,
                            characters_table_read_handle
                        ))
                            .unwrap_or_default();
                        CharacterLockRequest {
                            read_guids: character_guids.keys().copied().collect(),
                            write_guids: Vec::new(),
                            character_consumer: move |_, characters_read, _, zones_lock_enforcer| {
                                if let Some((instance_guid, _, _)) = possible_index {
                                    zones_lock_enforcer.read_zones(|_| ZoneLockRequest {
                                        read_guids: vec![instance_guid],
                                        write_guids: Vec::new(),
                                        zone_consumer: |_, zones_read, _| {
                                            if let Some(zone) = zones_read.get(&instance_guid) {
                                                let stats = TunneledPacket {
                                                    unknown1: true,
                                                    inner: Stats {
                                                        stats: vec![
                                                            Stat {
                                                                id: StatId::Speed,
                                                                multiplier: 1,
                                                                value1: 0.0,
                                                                value2: zone.speed,
                                                            },
                                                            Stat {
                                                                id: StatId::PowerRegen,
                                                                multiplier: 1,
                                                                value1: 0.0,
                                                                value2: 1.0,
                                                            },
                                                            Stat {
                                                                id: StatId::PowerRegen,
                                                                multiplier: 1,
                                                                value1: 0.0,
                                                                value2: 1.0,
                                                            },
                                                            Stat {
                                                                id: StatId::GravityMultiplier,
                                                                multiplier: 1,
                                                                value1: 0.0,
                                                                value2: zone.gravity_multiplier,
                                                            },
                                                            Stat {
                                                                id: StatId::JumpHeightMultiplier,
                                                                multiplier: 1,
                                                                value1: 0.0,
                                                                value2: zone.jump_height_multiplier,
                                                            },
                                                        ],
                                                    },
                                                };

                                                let mut packets = vec![GamePacket::serialize(&stats)?];

                                                packets.append(&mut Zone::diff_character_packets(&character_guids, &characters_read, &self.mounts)?);

                                                Ok(packets)
                                            } else {
                                                println!(
                                                    "Player {} sent a ready packet from unknown zone {}",
                                                    sender, instance_guid
                                                );
                                                Err(ProcessPacketError::CorruptedPacket)
                                            }
                                        },
                                    })
                                } else {
                                    println!(
                                        "Player {} sent a ready packet but is not in any zone",
                                        sender
                                    );
                                    Err(ProcessPacketError::CorruptedPacket)
                                }
                            },
                        }
                    })?;
                    packets.append(&mut character_packets);

                    let health = TunneledPacket {
                        unknown1: true,
                        inner: Health {
                            current: 25000,
                            max: 25000,
                        },
                    };
                    packets.push(GamePacket::serialize(&health)?);

                    let power = TunneledPacket {
                        unknown1: true,
                        inner: Power {
                            current: 300,
                            max: 300,
                        },
                    };
                    packets.push(GamePacket::serialize(&power)?);

                    packets.append(&mut make_test_wield_type(sender)?);

                    packets.append(&mut make_test_nameplate_image(sender)?);

                    let welcome_screen = TunneledPacket {
                        unknown1: true,
                        inner: WelcomeScreen {
                            show_ui: true,
                            unknown1: vec![],
                            unknown2: vec![],
                            unknown3: 0,
                            unknown4: 0,
                        },
                    };
                    packets.push(GamePacket::serialize(&welcome_screen)?);

                    let zone_details_done = TunneledPacket {
                        unknown1: true,
                        inner: ZoneDetailsDone {},
                    };
                    packets.push(GamePacket::serialize(&zone_details_done)?);

                    let preload_characters_done = TunneledPacket {
                        unknown1: true,
                        inner: PreloadCharactersDone { unknown1: false },
                    };
                    packets.push(GamePacket::serialize(&preload_characters_done)?);

                    broadcasts.push(Broadcast::Single(sender, packets));
                }
                OpCode::GameTimeSync => {
                    let game_time_sync = TunneledPacket {
                        unknown1: true,
                        inner: make_game_time_sync(),
                    };
                    broadcasts.push(Broadcast::Single(
                        sender,
                        vec![GamePacket::serialize(&game_time_sync)?],
                    ));
                }
                OpCode::Command => {
                    broadcasts.append(&mut process_command(self, &mut cursor)?);
                }
                OpCode::UpdatePlayerPosition => {
                    let pos_update: UpdatePlayerPosition =
                        DeserializePacket::deserialize(&mut cursor)?;
                    // TODO: broadcast pos update to all players
                    broadcasts.append(&mut Zone::move_character(sender, pos_update, self)?);
                }
                OpCode::ZoneTeleportRequest => {
                    let teleport_request: ZoneTeleportRequest =
                        DeserializePacket::deserialize(&mut cursor)?;

                    broadcasts.append(&mut self.lock_enforcer().write_characters(
                        |characters_table_write_handle: &mut GuidTableWriteHandle<
                            u64,
                            Character,
                            CharacterIndex,
                        >,
                         zones_lock_enforcer| {
                            zones_lock_enforcer.read_zones(|zones_table_read_handle| {
                                let possible_instance_guid =
                                    shorten_zone_template_guid(teleport_request.destination_guid)
                                        .and_then(|template_guid| {
                                            GameServer::any_instance(
                                                zones_table_read_handle,
                                                template_guid,
                                            )
                                        });
                                let read_guids = if let Ok(instance_guid) = possible_instance_guid {
                                    vec![instance_guid]
                                } else {
                                    Vec::new()
                                };

                                ZoneLockRequest {
                                    read_guids,
                                    write_guids: Vec::new(),
                                    zone_consumer: move |_, zones_read, _| {
                                        if let Ok(instance_guid) = possible_instance_guid {
                                            teleport_to_zone!(
                                                characters_table_write_handle,
                                                sender,
                                                zones_read.get(&instance_guid).expect(
                                                    "any_instance returned invalid zone GUID"
                                                ),
                                                None,
                                                None,
                                                self.mounts()
                                            )
                                        } else {
                                            Err(ProcessPacketError::CorruptedPacket)
                                        }
                                    },
                                }
                            })
                        },
                    )?);
                }
                OpCode::TeleportToSafety => {
                    let mut packets = self.lock_enforcer().write_characters(|characters_table_write_handle, zones_lock_enforcer| {
                        if let Some((instance_guid, _, _)) = characters_table_write_handle.index(player_guid(sender)) {
                            zones_lock_enforcer.read_zones(|_| ZoneLockRequest {
                                read_guids: vec![instance_guid],
                                write_guids: Vec::new(),
                                zone_consumer: |_, zones_read, _| {
                                    if let Some(zone) = zones_read.get(&instance_guid) {
                                        let spawn_pos = zone.default_spawn_pos;
                                        let spawn_rot = zone.default_spawn_rot;

                                        teleport_within_zone(sender, spawn_pos, spawn_rot, characters_table_write_handle, &self.mounts)
                                    } else {
                                        println!("Player {} outside zone tried to teleport to safety", sender);
                                        Err(ProcessPacketError::CorruptedPacket)
                                    }
                                },
                            })
                        } else {
                            println!("Unknown player {} tried to teleport to safety", sender);
                            Err(ProcessPacketError::CorruptedPacket)
                        }
                    })?;
                    broadcasts.append(&mut packets);
                }
                OpCode::Mount => {
                    broadcasts.append(&mut process_mount_packet(&mut cursor, sender, self)?);
                }
                OpCode::Housing => {
                    broadcasts.append(&mut process_housing_packet(sender, self, &mut cursor)?);
                    broadcasts.push(Broadcast::Single(
                        sender,
                        vec![GamePacket::serialize(&TunneledPacket {
                            unknown1: true,
                            inner: HouseInstanceList {
                                instances: vec![HouseInstanceEntry {
                                    description: HouseDescription {
                                        owner_guid: player_guid(sender),
                                        house_guid: zone_instance_guid(0, 100),
                                        house_name: 1987,
                                        player_given_name: "Blaster's Mustafar Lot".to_string(),
                                        owner_name: "BLASTER NICESHOT".to_string(),
                                        icon_id: 4209,
                                        unknown5: true,
                                        fixture_count: 1,
                                        unknown7: 0,
                                        furniture_score: 3,
                                        is_locked: false,
                                        unknown10: "".to_string(),
                                        unknown11: "".to_string(),
                                        rating: 4.5,
                                        total_votes: 5,
                                        is_published: false,
                                        is_rateable: false,
                                        unknown16: 0,
                                        unknown17: 0,
                                    },
                                    unknown1: player_guid(sender),
                                }],
                            },
                        })?],
                    ));
                }
                OpCode::Chat => {
                    broadcasts.append(&mut process_chat_packet(&mut cursor, sender)?);
                }
                _ => println!("Unimplemented: {:?}, {:x?}", op_code, data),
            },
            Err(_) => println!("Unknown op code: {}, {:x?}", raw_op_code, data),
        }

        Ok(broadcasts)
    }

    pub fn read_zone_templates(&self) -> &BTreeMap<u8, ZoneTemplate> {
        &self.zone_templates
    }

    pub fn mounts(&self) -> &BTreeMap<u32, MountConfig> {
        &self.mounts
    }

    pub fn lock_enforcer(&self) -> LockEnforcer {
        self.lock_enforcer_source.lock_enforcer()
    }

    pub fn any_instance(
        zones: &ZoneTableReadHandle<'_>,
        template_guid: u8,
    ) -> Result<u64, ProcessPacketError> {
        let instances = GameServer::zones_by_template(zones, template_guid);
        if !instances.is_empty() {
            let index = rand::thread_rng().gen_range(0..instances.len());
            Ok(instances[index])
        } else {
            Err(ProcessPacketError::CorruptedPacket)
        }
    }

    pub fn zones_by_template(zones: &ZoneTableReadHandle<'_>, template_guid: u8) -> Vec<u64> {
        zones.keys_by_index(template_guid).collect()
    }
}
